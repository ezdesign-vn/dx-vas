openapi: 3.0.3
info:
  title: Token Service API
  version: 1.3.1
  description: |
    Token Service cung cấp API trung tâm để phát hành, làm mới, thu hồi và  
    introspect JWT (RS256), đồng thời expose endpoint JWKS để API Gateway  
    và các service khác xác thực chữ ký offline. Tuân ADR-009/API Governance,  
    ADR-011/API Error Format, ADR-012/Response Structure, ADR-013/Path Naming,  
    ADR-030/Event Schema Governance, CR-03/Token Service Centralisation, CR-04.
    > Tuân theo schema mô tả chi tiết tại:  
    > - design.md#4-cấu-trúc-payload--metadata  
    > - data-model.md#tokenissuepayload

  contact:
    name: DX VAS Team
    email: dx@truongvietanh.edu.vn

  x-api-version: "v1"
  x-last-updated: "2025-06-07"
  x-author: "DX VAS Team"
  x-reviewed-by: "Stephen Le"
  x-maintainer: "dx@truongvietanh.edu.vn"
  x-adr-compliance:
    - adr-007-rbac.md
    - adr-011-api-error-format.md

servers:
  - url: https://api.truongvietanh.edu.vn/token
    description: Production
  - url: https://staging.truongvietanh.edu.vn/token
    description: Staging

security:
  - bearerAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  parameters:
    X-Tenant-ID:
      name: X-Tenant-ID
      in: header
      description: Tenant context identifier for multi-tenant routing (required).  
      required: true
      schema:
        type: string

    X-Request-ID:
      name: X-Request-ID
      in: header
      description: Client-generated unique request identifier for tracing. Returned in response.meta.trace_id.  
      required: false
      schema:
        type: string

    Authorization:
      name: Authorization
      in: header
      description: "Bearer token for authentication. Format: `Bearer {access_token}`."
      required: true
      schema:
        type: string
        format: bearer

  schemas:
    ResponseMeta:
      type: object
      required:
        - trace_id
        - timestamp
      properties:
        trace_id:
          type: string
          description: Correlation ID for trace
        timestamp:
          type: string
          format: date-time

    ResponseEnvelope:
      type: object
      required:
        - data
        - meta
      properties:
        data:
          type: object
        meta:
          $ref: '#/components/schemas/ResponseMeta'

    ErrorResponse:
      type: object
      required:
        - error
        - meta
      properties:
        error:
          type: object
          required:
            - code
            - message
          properties:
            code:
              type: string
            message:
              type: string
        meta:
          $ref: '#/components/schemas/ResponseMeta'

    LoginMethod:
      type: string
      enum: [oauth2, otp, password]
      description: Các phương thức xác thực được hỗ trợ.

    TokenIssueRequest:
      type: object
      description: Payload chuẩn để yêu cầu phát hành token sau xác thực.
      required:
        - sub
        - roles
        - permissions
        - session_id
      properties:
        sub:
          type: string
          description: Global user ID
          example: "user-123"
        roles:
          type: array
          items:
            type: string
          description: List of roles
          example: ["teacher"]
        permissions:
          type: array
          items:
            type: string
          description: List of permissions
          example: ["report.view_login_by_tenant"]
        session_id:
          type: string
          description: Session ID from auth_sessions
          example: "sess-abc-123"
        login_method:
          $ref: '#/components/schemas/LoginMethod' 

    TokenResponseData:
      type: object
      required:
        - access_token
        - refresh_token
        - token_type
        - expires_in
      properties:
        access_token:
          type: string
          description: JWT access token
          readOnly: true
        refresh_token:
          type: string
          description: Refresh token
        token_type:
          type: string
          example: "Bearer"
          readOnly: true
        expires_in:
          type: integer
          description: Expiry time in seconds
          readOnly: true

    TokenIssueResponseEnvelope:
      allOf:
        - $ref: '#/components/schemas/ResponseEnvelope'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/TokenResponseData'

    TokenRefreshResponseEnvelope:
      allOf:
        - $ref: '#/components/schemas/ResponseEnvelope'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/TokenResponseData'

    TokenRevokeRequest:
      type: object
      description: Payload to request revocation of all tokens associated with a session.
      required:
        - session_id
      properties:
        session_id:
          type: string
          description: Session ID whose tokens should be revoked.
          writeOnly: true

    TokenIntrospectRequest:
      type: object
      description: Payload to request introspection of a JWT, returning its active status and metadata.
      required:
        - token
      properties:
        token:
          type: string
          description: JWT to introspect
          writeOnly: true

    TokenIntrospectResponseData:
      type: object
      required:
        - active
        - exp
        - jti
      properties:
        active:
          type: boolean
          description: True if token is valid (not revoked or expired).
          readOnly: true
        sub:
          type: string
          description: Global user ID (subject) encoded in the token.
          readOnly: true
        tenant_id:
          type: string
          description: Tenant context extracted from the token.
          readOnly: true
        roles:
          type: array
          items:
            type: string
          description: List of roles assigned at issue time.
          readOnly: true
        permissions:
          type: array
          items:
            type: string
          description: List of permissions assigned at issue time.
          readOnly: true
        exp:
          type: integer
          description: Expiry time (epoch seconds)
          readOnly: true
        jti:
          type: string
          description: JWT ID (unique identifier for the token).
          readOnly: true

    TokenIntrospectResponseEnvelope:
      allOf:
        - $ref: '#/components/schemas/ResponseEnvelope'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/TokenIntrospectResponseData'

    JWK:
      type: object
      description: JSON Web Key (JWK) object as defined in RFC 7517, used by the JWKS endpoint.
      required:
        - kty
        - use
        - alg
        - kid
        - n
        - e
      properties:
        kty:
          type: string
        use:
          type: string
        alg:
          type: string
        kid:
          type: string
        n:
          type: string
        e:
          type: string

    JWKS:
      type: object
      properties:
        keys:
          type: array
          items:
            $ref: '#/components/schemas/JWK'

  responses:
    ValidationError:
      description: Validation error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    RateLimitError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    InternalError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

paths:
  /v1/token/issue:
    post:
      x-required-permission: token.issue
      x-emits-event:
        - token.issued.v1      
      tags:
        - Tokens
      summary: Issue access & refresh tokens
      description: >
        Phát hành JWT access token và refresh token sau khi Auth Service
        xác thực thành công. Yêu cầu header `X-Tenant-ID` và `Authorization` (Bearer token):
        `Authorization: Bearer {auth_provider_token}`. Kết quả được publish event `token.issued.v1`.
      parameters:
        - $ref: '#/components/parameters/X-Tenant-ID'
        - $ref: '#/components/parameters/Authorization'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenIssueRequest'
            examples:
              password:
                summary: Request ví dụ
                value:
                  sub: "user-123"
                  roles: ["teacher"]
                  permissions: ["report.view_login_by_tenant"]
                  session_id: "sess-abc-123"
                  login_method: "password"
              oauth2:
                summary: Đăng nhập Google OAuth2
                value:
                  sub: "user-123"
                  roles: ["admin"]
                  permissions: ["user.manage"]
                  session_id: "sess-x1"
                  login_method: "oauth2"

              otp:
                summary: Đăng nhập OTP
                value:
                  sub: "user-456"
                  roles: ["student"]
                  permissions: ["exam.view"]
                  session_id: "sess-x2"
                  login_method: "otp"

      responses:
        '200':
          description: Tokens issued successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenIssueResponseEnvelope'
              examples:
                success:
                  summary: Response ví dụ
                  value:
                    data:
                      access_token: "eyJhbGciOiJSUzI1NiIs..."
                      refresh_token: "dGhpc2lyZWZyZXNo..."
                      token_type: "Bearer"
                      expires_in: 900
                    meta:
                      trace_id: "a1b2c3d4"
                      timestamp: "2025-06-09T10:00:00Z"
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalError'

  /v1/token/refresh:
    post:
      x-required-permission: token.refresh
      x-emits-event:
        - token.revoked.v1
        - token.issued.v1      
      tags:
        - Tokens
      summary: Refresh tokens
      description: >
        Cấp mới access + refresh tokens dựa trên refresh token hợp lệ.
        Yêu cầu header `X-Tenant-ID` và `Authorization: Bearer {refresh_token}`.
        Kết quả publish event `token.issued.v1` và `token.revoked.v1` cho token cũ.
      parameters:
        - $ref: '#/components/parameters/X-Tenant-ID'
        - $ref: '#/components/parameters/Authorization'
      responses:
        '200':
          description: Tokens refreshed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefreshResponseEnvelope'
              examples:
                success:
                  summary: Response ví dụ
                  value:
                    data:
                      access_token: "newAccessToken..."
                      refresh_token: "newRefreshToken..."
                      token_type: "Bearer"
                      expires_in: 900
                    meta:
                      trace_id: "d4c3b2a1"
                      timestamp: "2025-06-09T10:05:00Z"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalError'

  /v1/token/revoke:
    post:
      x-required-permission: token.revoke
      x-emits-event:
        - token.revoked.v1      
      tags:
        - Tokens
      summary: Revoke a session
      description: >
        Thu hồi access và refresh tokens cho một session. Idempotent:
        gọi nhiều lần tương tự. Kết quả publish event `token.revoked.v1`.
      parameters:
        - $ref: '#/components/parameters/X-Tenant-ID'
        - $ref: '#/components/parameters/Authorization'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRevokeRequest'
            examples:
              default:
                summary: Request ví dụ
                value:
                  session_id: "sess-abc-123"
      responses:
        '204':
          description: No Content – token revoked
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalError'

  /v1/token/introspect:
    post:
      x-required-permission: token.introspect
      x-emits-event:
        - token.introspect_fail.v1      
      tags:
        - Tokens
      summary: Introspect a token
      description: >
        Kiểm tra tính hợp lệ của token và trả về metadata (sub, tenant_id, roles, permissions, exp).
        Trả về `active=false` nếu token bị thu hồi hoặc hết hạn – publish event `token.introspect_fail.v1`.
      parameters:
        - $ref: '#/components/parameters/X-Tenant-ID'
        - $ref: '#/components/parameters/Authorization'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenIntrospectRequest'
            examples:
              default:
                summary: Request ví dụ
                value:
                  token: "eyJhbGciOiJSUzI1NiIs..."
      responses:
        '200':
          description: Token introspected
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenIntrospectResponseEnvelope'
              examples:
                success:
                  summary: Response ví dụ
                  value:
                    data:
                      active: true
                      sub: "user-123"
                      tenant_id: "vas001"
                      roles: ["teacher"]
                      permissions: ["report.view_login_by_tenant"]
                      exp: 1717958400
                      jti: "uuid-abc-123"
                    meta:
                      trace_id: "1a2b3c4d"
                      timestamp: "2025-06-09T10:10:00Z"
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalError'

  /.well-known/jwks.json:
      get:
        tags:
          - JWKS
        summary: Get JSON Web Key Set (JWKS)
        description: >
          Cung cấp danh sách các public key (JWKS) để các client hoặc service
          khác có thể xác thực chữ ký của JWT được phát hành bởi Token Service.
          Endpoint này là public và nên được cache ở phía client.
        security: [] # Override security toàn cục, đánh dấu đây là public endpoint
        responses:
          '200':
            description: A JWK set
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JWKS'
                examples:
                  success:
                    summary: JWKS response example
                    value:
                      keys:
                        - kty: "RSA"
                          use: "sig"
                          alg: "RS256"
                          kid: "key-id-1"
                          n: "uA6kkl5e8fKNS3k0_4ZFnN..."
                          e: "AQAB"
          '500':
            $ref: '#/components/responses/InternalError'