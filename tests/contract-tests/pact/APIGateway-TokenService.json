{
  "consumer": {
    "name": "APIGateway"
  },
  "interactions": [
    {
      "description": "a request for the JSON Web Key Set",
      "providerStates": [
        {
          "name": "token service has active public keys"
        }
      ],
      "request": {
        "method": "GET",
        "path": "/.well-known/jwks.json"
      },
      "response": {
        "body": {
          "keys": [
            {
              "alg": "RS256",
              "e": "AQAB",
              "kid": "key-id-1",
              "kty": "RSA",
              "n": "base64-encoded-modulus",
              "use": "sig"
            }
          ]
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "matchingRules": {
          "body": {
            "$.keys": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type",
                  "min": 1
                }
              ]
            },
            "$.keys[*].kid": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.keys[*].n": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {},
          "status": {}
        },
        "status": 200
      }
    },
    {
      "description": "a request to issue a new token pair",
      "providerStates": [
        {
          "name": "An internal service call with valid user data"
        }
      ],
      "request": {
        "body": {
          "login_method": "otp",
          "permissions": [
            "grade.read"
          ],
          "roles": [
            "teacher"
          ],
          "session_id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
          "sub": "user-123"
        },
        "headers": {
          "Authorization": "Bearer internal-auth-token",
          "Content-Type": "application/json; charset=utf-8",
          "X-Tenant-ID": "tenant-abc"
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.session_id": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "regex",
                  "regex": "^[0-9a-f]{8}(-[0-9a-f]{4}){3}-[0-9a-f]{12}$"
                }
              ]
            }
          },
          "header": {
            "Authorization": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          }
        },
        "method": "POST",
        "path": "/v1/token/issue"
      },
      "response": {
        "body": {
          "data": {
            "access_token": "eyJhbGciOiJSUzI1NiIs...",
            "expires_in": 3600,
            "refresh_token": "eyJhbGciOiJSUzI1NiIs...",
            "token_type": "Bearer"
          },
          "meta": {
            "timestamp": "2015-08-06T16:53:10+01:00",
            "trace_id": "req-uuid-123"
          }
        },
        "headers": {
          "Content-Type": "application/json; charset=utf-8"
        },
        "matchingRules": {
          "body": {
            "$.data.access_token": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.data.expires_in": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.data.refresh_token": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.meta.timestamp": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "regex",
                  "regex": "^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z)$"
                }
              ]
            },
            "$.meta.trace_id": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {},
          "status": {}
        },
        "status": 200
      }
    },
    {
      "description": "a request to issue a token without authorization",
      "providerStates": [
        {
          "name": "a request without Authorization header"
        }
      ],
      "request": {
        "body": {
          "roles": [
            "teacher"
          ],
          "sub": "user-123"
        },
        "headers": {
          "Content-Type": "application/json; charset=utf-8",
          "X-Tenant-ID": "tenant-abc"
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "POST",
        "path": "/v1/token/issue"
      },
      "response": {
        "body": {
          "error": {
            "code": "auth.unauthorized",
            "message": "Missing or invalid authorization token"
          },
          "meta": {
            "timestamp": "2015-08-06T16:53:10+01:00",
            "trace_id": "req-uuid-123"
          }
        },
        "headers": {
          "Content-Type": "application/json; charset=utf-8"
        },
        "matchingRules": {
          "body": {
            "$.error.message": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.meta.timestamp": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "regex",
                  "regex": "^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z)$"
                }
              ]
            },
            "$.meta.trace_id": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {},
          "status": {}
        },
        "status": 401
      }
    },
    {
      "description": "a request to issue a token without required fields",
      "providerStates": [
        {
          "name": "a token issue request is missing required fields"
        }
      ],
      "request": {
        "body": {
          "roles": [
            "teacher"
          ],
          "session_id": "f47ac10b-58cc-4372-a567-0e02b2c3d479"
        },
        "headers": {
          "Authorization": "Bearer internal-auth-token",
          "Content-Type": "application/json; charset=utf-8",
          "X-Tenant-ID": "tenant-abc"
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.session_id": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "regex",
                  "regex": "^[0-9a-f]{8}(-[0-9a-f]{4}){3}-[0-9a-f]{12}$"
                }
              ]
            }
          },
          "header": {
            "Authorization": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          }
        },
        "method": "POST",
        "path": "/v1/token/issue"
      },
      "response": {
        "body": {
          "error": {
            "code": "common.validation_error",
            "message": "Validation failed: sub is required"
          },
          "meta": {
            "timestamp": "2015-08-06T16:53:10+01:00",
            "trace_id": "req-uuid-123"
          }
        },
        "headers": {
          "Content-Type": "application/json; charset=utf-8"
        },
        "matchingRules": {
          "body": {
            "$.error.message": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.meta.timestamp": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "regex",
                  "regex": "^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z)$"
                }
              ]
            },
            "$.meta.trace_id": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {},
          "status": {}
        },
        "status": 400
      }
    },
    {
      "description": "a request to refresh an access token",
      "providerStates": [
        {
          "name": "a valid refresh token exists"
        }
      ],
      "request": {
        "headers": {
          "Authorization": "Bearer valid-refresh-token",
          "Content-Type": "application/json; charset=utf-8",
          "X-Tenant-ID": "tenant-abc"
        },
        "matchingRules": {
          "header": {
            "Authorization": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          }
        },
        "method": "POST",
        "path": "/v1/token/refresh"
      },
      "response": {
        "body": {
          "data": {
            "access_token": "eyJhbGciOiJSUzI1NiIs...",
            "expires_in": 3600,
            "refresh_token": "eyJhbGciOiJSUzI1NiIs...",
            "token_type": "Bearer"
          },
          "meta": {
            "timestamp": "2015-08-06T16:53:10+01:00",
            "trace_id": "req-uuid-123"
          }
        },
        "headers": {
          "Content-Type": "application/json; charset=utf-8"
        },
        "matchingRules": {
          "body": {
            "$.data.access_token": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.data.expires_in": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.data.refresh_token": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.meta.timestamp": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "regex",
                  "regex": "^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z)$"
                }
              ]
            },
            "$.meta.trace_id": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {},
          "status": {}
        },
        "status": 200
      }
    },
    {
      "description": "a request to refresh using a revoked token",
      "providerStates": [
        {
          "name": "the provided refresh token has been revoked"
        }
      ],
      "request": {
        "headers": {
          "Authorization": "Bearer revoked-refresh-token",
          "Content-Type": "application/json; charset=utf-8",
          "X-Tenant-ID": "tenant-abc"
        },
        "matchingRules": {
          "header": {
            "Authorization": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          }
        },
        "method": "POST",
        "path": "/v1/token/refresh"
      },
      "response": {
        "body": {
          "error": {
            "code": "auth.session.revoked",
            "message": "Session has been revoked"
          },
          "meta": {
            "timestamp": "2015-08-06T16:53:10+01:00",
            "trace_id": "req-uuid-123"
          }
        },
        "headers": {
          "Content-Type": "application/json; charset=utf-8"
        },
        "matchingRules": {
          "body": {
            "$.error.message": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.meta.timestamp": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "regex",
                  "regex": "^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z)$"
                }
              ]
            },
            "$.meta.trace_id": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {},
          "status": {}
        },
        "status": 403
      }
    },
    {
      "description": "a request to revoke a non-existent session",
      "providerStates": [
        {
          "name": "session does not exist"
        }
      ],
      "request": {
        "body": {
          "session_id": "non-existent-session"
        },
        "headers": {
          "Authorization": "Bearer valid-access-token",
          "Content-Type": "application/json; charset=utf-8",
          "X-Tenant-ID": "tenant-abc"
        },
        "matchingRules": {
          "body": {
            "$.session_id": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {
            "Authorization": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          }
        },
        "method": "POST",
        "path": "/v1/token/revoke"
      },
      "response": {
        "body": {
          "error": {
            "code": "session.not_found",
            "message": "Session not found"
          },
          "meta": {
            "timestamp": "2015-08-06T16:53:10+01:00",
            "trace_id": "req-uuid-123"
          }
        },
        "headers": {
          "Content-Type": "application/json; charset=utf-8"
        },
        "matchingRules": {
          "body": {
            "$.error.message": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.meta.timestamp": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "regex",
                  "regex": "^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z)$"
                }
              ]
            },
            "$.meta.trace_id": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {},
          "status": {}
        },
        "status": 404
      }
    },
    {
      "description": "a request to revoke an active session",
      "providerStates": [
        {
          "name": "a valid session exists"
        }
      ],
      "request": {
        "body": {
          "session_id": "valid-session-id"
        },
        "headers": {
          "Authorization": "Bearer valid-access-token",
          "Content-Type": "application/json; charset=utf-8",
          "X-Tenant-ID": "tenant-abc"
        },
        "matchingRules": {
          "body": {
            "$.session_id": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {
            "Authorization": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          }
        },
        "method": "POST",
        "path": "/v1/token/revoke"
      },
      "response": {
        "status": 204
      }
    }
  ],
  "metadata": {
    "pact-js": {
      "version": "15.0.1"
    },
    "pactRust": {
      "ffi": "0.4.22",
      "models": "1.2.3"
    },
    "pactSpecification": {
      "version": "3.0.0"
    }
  },
  "provider": {
    "name": "TokenService"
  }
}