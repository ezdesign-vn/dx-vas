openapi: 3.0.3
info:
  title: Audit Logging Service API
  version: "2.2.0"
  description: |
    API c·ªßa Audit Logging Service ph·ª•c v·ª• vi·ªác ghi nh·∫≠n v√† truy v·∫•n c√°c h√†nh vi h·ªá th·ªëng.
    D·ªØ li·ªáu log c√≥ t√≠nh ph√¢n t·∫ßng theo tenant v√† h·ªó tr·ª£ chu·∫©n h√≥a theo ADR-004 (Security), ADR-007 (RBAC), ADR-011 (API Error Format), ADR-012 (Response Structure), ADR-013 (Path Naming), ADR-024 (Data Retention), ADR-026 (Hard Delete Policy).

    üìé T√†i li·ªáu li√™n quan:
    - [Design](./design.md)
    - [Interface Contract](./interface-contract.md)
    - [Data Model](./data-model.md)
    - [ADR-007](../../ADR/adr-007-rbac.md), [ADR-011](../../ADR/adr-011-api-error-format.md)

  x-api-version: "v1"
  x-last-updated: "2025-06-07"
  x-author: "DX VAS Team"
  x-reviewed-by: "Stephen Le"
  x-maintainer: "dx@truongvietanh.edu.vn"
  x-purpose: |
    API c·ªßa Audit Logging Service ph·ª•c v·ª• vi·ªác ghi nh·∫≠n v√† truy v·∫•n c√°c h√†nh vi h·ªá th·ªëng.
  x-adr-compliance:
    - adr-007-rbac.md
    - adr-011-api-error-format.md

servers:
  - url: https://api.truongvietanh.edu.vn/audit/v1
    description: Production
  - url: https://staging-api.truongvietanh.edu.vn/audit/v1
    description: Staging

tags:
  - name: Audit Logging
    description: |
      Nh√≥m c√°c API ph·ª•c v·ª• vi·ªác ghi nh·∫≠n, truy v·∫•n v√† ki·ªÉm tra l·ªãch s·ª≠ h√†nh ƒë·ªông (audit trail) trong h·ªá th·ªëng DX-VAS.
      Bao g·ªìm c√°c API cho ph√©p service n·ªôi b·ªô ghi log h√†nh vi, v√† admin truy v·∫•n th√¥ng tin n√†y theo ƒëi·ªÅu ki·ªán ƒëa d·∫°ng.
    x-domain: audit
    x-feature-group: logging
    x-visibility: tenant-restricted
    x-owner: dx-vas
    x-lifecycle: stable

components:
    #___Headers___
  headers:
    X-Request-ID:
      description: |
        M√£ ƒë·ªãnh danh y√™u c·∫ßu duy nh·∫•t, ƒë∆∞·ª£c t·∫°o b·ªüi Gateway ƒë·ªÉ trace to√†n h·ªá th·ªëng.  
        ƒê∆∞·ª£c ph·∫£n h·ªìi l·∫°i ·ªü m·ªçi response ƒë·ªÉ ph·ª•c v·ª• debug, audit, v√† correlate logs.
      schema:
        type: string
        example: "req-34b2fc83-12b8-4efb-9d01-abc123456def"
      required: true

  parameters:
    XTenantID:
      name: X-Tenant-ID
      in: header
      required: true
      description: Tenant hi·ªán t·∫°i c·ªßa ng∆∞·ªùi d√πng, d√πng ƒë·ªÉ ki·ªÉm tra ph√¢n quy·ªÅn
      schema:
        type: string
      example: "vas-sch-01"

    AuthorizationHeader:
      name: Authorization
      in: header
      required: true
      description: JWT token cho x√°c th·ª±c
      schema:
        type: string
        example: "Bearer eyJhbGciOiJIUzI1NiIsInR..."

    ActorUserID:
      name: actor_user_id
      in: query
      required: false
      description: L·ªçc theo ID ng∆∞·ªùi th·ª±c hi·ªán h√†nh ƒë·ªông
      schema:
        type: string
      example: "user_abc123"

    TraceID:
      name: trace_id
      in: query
      required: false
      description: L·ªçc theo trace ID ƒë·ªÉ gom nh√≥m c√°c h√†nh ƒë·ªông
      schema:
        type: string
      example: "trace_456"

    Action:
      name: action
      in: query
      required: false
      description: "L·ªçc theo lo·∫°i h√†nh ƒë·ªông (vd: user.created)"
      schema:
        type: string
      example: "user.deleted"

    ResourceID:
      name: resource_id
      in: query
      required: true
      description: ID t√†i nguy√™n b·ªã t√°c ƒë·ªông
      schema:
        type: string
      example: "u_456"

    ResourceType:
      name: resource_type
      in: query
      required: false
      description: Lo·∫°i t√†i nguy√™n b·ªã t√°c ƒë·ªông
      schema:
        $ref: '#/components/schemas/ResourceTypeEnum'

    Status:
      name: status
      in: query
      required: false
      description: Tr·∫°ng th√°i k·∫øt qu·∫£ h√†nh ƒë·ªông
      schema:
        $ref: '#/components/schemas/StatusEnum'

    FromTime:
      name: from_time
      in: query
      required: false
      description: Ng√†y b·∫Øt ƒë·∫ßu (ISO 8601)
      schema:
        type: string
        format: date-time
      example: "2025-06-01T00:00:00Z"

    ToTime:
      name: to_time
      in: query
      required: false
      description: Ng√†y k·∫øt th√∫c (ISO 8601)
      schema:
        type: string
        format: date-time
      example: "2025-06-14T23:59:59Z"

    Page:
      name: page
      in: query
      required: false
      description: "Trang hi·ªán t·∫°i (default: 1)"
      schema:
        type: integer
        default: 1
        minimum: 1
      example: 1

    PageSize:
      name: page_size
      in: query
      required: false
      description: "S·ªë l∆∞·ª£ng k·∫øt qu·∫£ m·ªói trang (default: 20)"
      schema:
        type: integer
        default: 20
        minimum: 1
        maximum: 100
      example: 20

  schemas:
    #===Enums===
    StatusEnum:
      type: string
      description: Tr·∫°ng th√°i k·∫øt qu·∫£ h√†nh ƒë·ªông
      enum: [success, failure, warning]
      example: "success"

    ResourceTypeEnum:
      type: string
      description: Lo·∫°i t√†i nguy√™n li√™n quan ƒë·∫øn h√†nh ƒë·ªông audit
      enum:
        - user
        - tenant
        - role
        - permission
        - token
        - report
        - notification
        - system
      example: "user"

    ActorTypeEnum:
      type: string
      description: Lo·∫°i ƒë·ªëi t∆∞·ª£ng th·ª±c hi·ªán h√†nh ƒë·ªông
      enum:
        - user
        - system
        - service
      example: "user"

    #===Envelope===
    ErrorEnvelope:
      type: object
      required: [error, meta]
      properties:
        error:
          type: object
          required: [code, message]
          properties:
            code:
              type: string
              example: "common.validation_failed"
            message:
              type: string
              example: "Payload kh√¥ng h·ª£p l·ªá"
            details:
              type: array
              nullable: true
              items:
                type: object
                properties:
                  field:
                    type: string
                  issue:
                    type: string
        meta:
          $ref: '#/components/schemas/ResponseMeta'

    ResponseMeta:
      type: object
      required: [request_id, timestamp]
      properties:
        pagination:
          type: object
          nullable: true
          description: Th√¥ng tin ph√¢n trang (ch·ªâ xu·∫•t hi·ªán n·∫øu k·∫øt qu·∫£ h·ªó tr·ª£ ph√¢n trang)
          properties:
            page:
              type: integer
              example: 1
              description: S·ªë trang hi·ªán t·∫°i
            page_size:
              type: integer
              example: 20
              description: S·ªë ph·∫ßn t·ª≠ tr√™n m·ªói trang
            total:
              type: integer
              example: 125
              description: T·ªïng s·ªë ph·∫ßn t·ª≠ ph√π h·ª£p v·ªõi ƒëi·ªÅu ki·ªán truy v·∫•n
        request_id:
          type: string
          format: uuid
          example: "req-xyz-123"
        timestamp:
          type: string
          format: date-time
          example: "2025-06-14T12:00:00Z"

    ErrorResponse:
      allOf:
        - $ref: '#/components/schemas/ErrorEnvelope'

    AuditLog:
      type: object
      description: B·∫£n ghi h√†nh vi ƒë√£ ƒë∆∞·ª£c l∆∞u tr·ªØ trong h·ªá th·ªëng.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: ID ƒë·ªãnh danh duy nh·∫•t c·ªßa b·∫£n ghi log
          example: "log-abc123"
        tenant_id:
          type: string
          readOnly: true
          description: M√£ tenant s·ªü h·ªØu b·∫£n ghi
          example: "vas-sch-01"
        trace_id:
          type: string
          description: M√£ trace d√πng ƒë·ªÉ li√™n k·∫øt xuy√™n su·ªët h√†nh ƒë·ªông
          example: "trace-xyz"
        actor_user_id:
          type: string
          description: ID ng∆∞·ªùi d√πng th·ª±c hi·ªán h√†nh ƒë·ªông (n·∫øu c√≥)
          example: "user-01"
        action:
          type: string
          description: H√†nh ƒë·ªông ƒë∆∞·ª£c th·ª±c hi·ªán (action type)
          example: "user.login.success"
        resource_type:
          $ref: '#/components/schemas/ResourceTypeEnum'
        resource_id:
          type: string
          description: ID t√†i nguy√™n b·ªã t√°c ƒë·ªông
          example: "u_456"
        status:
          $ref: '#/components/schemas/StatusEnum'
        input_parameters:
          type: object
          nullable: true
          description: "Th√¥ng tin ƒë·∫ßu v√†o (c√≥ th·ªÉ b·ªã che t√πy quy·ªÅn) - L∆∞u tr·ªØ c√°c tham s·ªë ƒë·∫ßu v√†o c·ªßa h√†nh ƒë·ªông, ƒë∆∞·ª£c x·ª≠ l√Ω t·ª´ tr∆∞·ªùng data trong request ghi log"
          example:
            email: "masked"
            phone: "masked"
        ip_address:
          type: string
          description: ƒê·ªãa ch·ªâ IP ng∆∞·ªùi th·ª±c hi·ªán (n·∫øu c√≥)
          example: "masked"
        user_agent:
          type: string
          description: Chu·ªói User-Agent t·ª´ tr√¨nh duy·ªát
          example: "masked"
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Th·ªùi ƒëi·ªÉm ghi log
          example: "2025-06-14T12:00:00Z"

    AuditLogRequest:
      type: object
      description: D·ªØ li·ªáu c·∫ßn g·ª≠i ƒë·ªÉ ghi nh·∫≠n m·ªôt h√†nh ƒë·ªông audit
      required:
        - action
        - source_service
        - actor_id
        - actor_type
        - resource_id
        - resource_type
        - timestamp
      properties:
        action:
          type: string
          description: T√™n h√†nh ƒë·ªông ƒë∆∞·ª£c th·ª±c hi·ªán (theo chu·∫©n namespace)
          example: "user.created"
        source_service:
          type: string
          description: T√™n service ph√°t h√†nh h√†nh ƒë·ªông
          example: "user-service"
        actor_id:
          type: string
          format: uuid
          writeOnly: true
          description: ID t√°c nh√¢n th·ª±c hi·ªán (user/system)
          example: "user-01"
        actor_type:
          $ref: '#/components/schemas/ActorTypeEnum'
        resource_id:
          type: string
          format: uuid
          description: ID t√†i nguy√™n b·ªã t√°c ƒë·ªông
          example: "user-99"
        resource_type:
          $ref: '#/components/schemas/ResourceTypeEnum'
        data:
          type: object
          nullable: true
          description: D·ªØ li·ªáu chi ti·∫øt b·ªï sung li√™n quan ƒë·∫øn h√†nh ƒë·ªông
          example:
            before:
              name: "Alice"
            after:
              name: "Bob"
        timestamp:
          type: string
          format: date-time
          description: Th·ªùi ƒëi·ªÉm th·ª±c hi·ªán h√†nh ƒë·ªông
          example: "2025-06-14T10:32:00Z"

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  responses:
    400BadRequest:
      description: "400 Bad Request ‚Äì Payload kh√¥ng h·ª£p l·ªá ho·∫∑c thi·∫øu th√¥ng tin b·∫Øt bu·ªôc."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorEnvelope'
          example:
            data: null
            meta:
              request_id: "req-badreq-123"
              timestamp: "2025-06-14T12:01:00Z"
            error:
              code: "common.validation_failed"
              message: "D·ªØ li·ªáu ƒë·∫ßu v√†o kh√¥ng h·ª£p l·ªá."
              details:
                - field: "action"
                  issue: "Tr∆∞·ªùng n√†y l√† b·∫Øt bu·ªôc."

    401Unauthorized:
      description: "401 Unauthorized ‚Äì Thi·∫øu ho·∫∑c sai JWT."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorEnvelope'
          example:
            data: null
            meta:
              request_id: "req-unauth-456"
              timestamp: "2025-06-14T12:01:05Z"
            error:
              code: "auth.unauthorized"
              message: "Token kh√¥ng h·ª£p l·ªá ho·∫∑c ƒë√£ h·∫øt h·∫°n."

    403Forbidden:
      description: "403 Forbidden ‚Äì Kh√¥ng c√≥ quy·ªÅn truy c·∫≠p t√†i nguy√™n n√†y."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorEnvelope'
          example:
            data: null
            meta:
              request_id: "req-forbid-789"
              timestamp: "2025-06-14T12:01:10Z"
            error:
              code: "auth.permission_denied"
              message: "B·∫°n kh√¥ng c√≥ quy·ªÅn truy c·∫≠p v√†o t√†i nguy√™n n√†y."

    404NotFound:
      description: "404 Not Found ‚Äì T√†i nguy√™n kh√¥ng t·ªìn t·∫°i ho·∫∑c kh√¥ng thu·ªôc quy·ªÅn xem."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorEnvelope'
          example:
            data: null
            meta:
              request_id: "req-notfound-321"
              timestamp: "2025-06-14T12:01:15Z"
            error:
              code: "log.log_not_found"
              message: "T√†i nguy√™n kh√¥ng t·ªìn t·∫°i ho·∫∑c kh√¥ng th·ªÉ truy c·∫≠p."

    500InternalError:
      description: "500 Internal Server Error ‚Äì L·ªói h·ªá th·ªëng kh√¥ng x√°c ƒë·ªãnh."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorEnvelope'
          example:
            data: null
            meta:
              request_id: "req-internal-999"
              timestamp: "2025-06-14T12:01:20Z"
            error:
              code: "common.internal_error"
              message: "ƒê√£ x·∫£y ra l·ªói h·ªá th·ªëng."

security:
  - BearerAuth: []

paths:
  /audit-log:
    post:
      tags: [Audit Logging]
      summary: Ghi nh·∫≠n m·ªôt s·ª± ki·ªán audit t·ª´ service kh√°c
      description: |
        Endpoint cho ph√©p c√°c core service ghi l·∫°i log audit m·ªôt c√°ch chu·∫©n h√≥a.
        Ch·ªâ s·ª≠ d·ª•ng n·ªôi b·ªô, kh√¥ng d√†nh cho frontend.
      operationId: createAuditLog
      x-required-permission: audit.write
      x-condition:
        tenant_id: "{{X-Tenant-ID}}"
      x-emits-event: []
      x-gateway-enforced:
        auth_required: true
        tenant_header: true
        permission_checked: true
      x-route-evaluation: internal
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuditLogRequest'
      responses:
        '204':
          description: Ghi log th√†nh c√¥ng, kh√¥ng c√≥ n·ªôi dung tr·∫£ v·ªÅ.
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        '400':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/400BadRequest'
        '403':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/403Forbidden'
        '500':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/500InternalError'

    get:
      tags: [Audit Logging]
      summary: Truy v·∫•n danh s√°ch b·∫£n ghi audit log
      operationId: listAuditLogs
      x-required-permission: audit.read.log
      x-emits-event: []
      x-condition:
        tenant_id: "{{X-Tenant-ID}}"
      x-gateway-enforced:
        auth_required: true
        tenant_header: true
        permission_checked: true
      x-route-evaluation: internal
      parameters:
        - $ref: '#/components/parameters/ActorUserID'
        - $ref: '#/components/parameters/TraceID'
        - $ref: '#/components/parameters/Action'
        - $ref: '#/components/parameters/ResourceID'
        - $ref: '#/components/parameters/ResourceType'
        - $ref: '#/components/parameters/Status'
        - $ref: '#/components/parameters/FromTime'
        - $ref: '#/components/parameters/ToTime'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PageSize'
      responses:
        '200':
          description: Danh s√°ch log theo ti√™u ch√≠
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuditLog'
                  meta:
                    $ref: '#/components/schemas/ResponseMeta'
                  error:
                    type: object
        '400':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/400BadRequest'
        '403':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/403Forbidden'
        '500':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/500InternalError'

  /audit-log/{id}:
    get:
      tags: [Audit Logging]
      summary: Truy v·∫•n chi ti·∫øt m·ªôt b·∫£n ghi log
      operationId: getAuditLogById
      x-required-permission: audit.read.log
      x-emits-event: []
      x-condition:
        tenant_id: "{{X-Tenant-ID}}"
      x-gateway-enforced:
        auth_required: true
        tenant_header: true
        permission_checked: true
      x-route-evaluation: internal
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: string }
        - $ref: '#/components/parameters/XTenantID'
      responses:
        '200':
          description: Tr·∫£ v·ªÅ chi ti·∫øt log
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLog'
        '403':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/403Forbidden'
        '404':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          description: Log kh√¥ng t·ªìn t·∫°i
        '500':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/500InternalError'
