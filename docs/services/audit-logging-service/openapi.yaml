openapi: 3.0.3
info:
  title: Audit Logging Service API
  version: "1.1.0"
  description: |
    API c·ªßa Audit Logging Service ph·ª•c v·ª• vi·ªác ghi nh·∫≠n v√† truy v·∫•n c√°c h√†nh vi h·ªá th·ªëng.
    D·ªØ li·ªáu log c√≥ t√≠nh ph√¢n t·∫ßng theo tenant v√† h·ªó tr·ª£ chu·∫©n h√≥a theo ADR-004 (Security), ADR-007 (RBAC), ADR-011 (API Error Format), ADR-012 (Response Structure), ADR-013 (Path Naming), ADR-024 (Data Retention), ADR-026 (Hard Delete Policy).

    üìé T√†i li·ªáu li√™n quan:
    - [Design](./design.md)
    - [Interface Contract](./interface-contract.md)
    - [Data Model](./data-model.md)
    - [ADR-007](../../../ADR/adr-007-rbac.md), [ADR-011](../../../ADR/adr-011-api-error-format.md)

  x-api-version: "v1"
  x-last-updated: "2025-06-07"
  x-author: "DX VAS Team"
  x-reviewed-by: "Stephen Le"
  x-maintainer: "dx@truongvietanh.edu.vn"
  x-purpose: | # TODO: M√¥ t·∫£ m·ª•c ƒë√≠ch ch√≠nh c·ªßa API n√†y m·ªôt c√°ch ng·∫Øn g·ªçn (1-2 d√≤ng).
    API c·ªßa Audit Logging Service ph·ª•c v·ª• vi·ªác ghi nh·∫≠n v√† truy v·∫•n c√°c h√†nh vi h·ªá th·ªëng.
  x-adr-compliance:
    - adr-007-rbac.md
    - adr-011-api-error-format.md

servers:
  - url: https://api.truongvietanh.edu.vn/audit
    description: Production
  - url: https://staging.truongvietanh.edu.vn/audit
    description: Staging

tags:
  - name: audit-logs
    description: Ghi nh·∫≠n v√† truy v·∫•n audit logs

components:
  parameters:
    X-Request-ID:
      name: X-Request-ID
      in: header
      required: true
      schema: { type: string }
      description: M√£ ƒë·ªãnh danh truy v·∫øt request
    X-Tenant-ID:
      name: X-Tenant-ID
      in: header
      required: true
      schema: { type: string }
      description: M√£ tenant t∆∞∆°ng ·ª©ng v·ªõi b·∫£n ghi log

    Page:
      name: page
      in: query
      description: Trang d·ªØ li·ªáu mu·ªën truy xu·∫•t (b·∫Øt ƒë·∫ßu t·ª´ 1)
      required: false
      schema:
        type: integer
        default: 1
        minimum: 1

    Limit:
      name: limit
      in: query
      description: S·ªë b·∫£n ghi m·ªói trang
      required: false
      schema:
        type: integer
        default: 20
        minimum: 1
        maximum: 100

  responses:
    CreatedResponse:
      description: T·∫°o m·ªõi th√†nh c√¥ng
      headers:
        X-Request-ID:
          $ref: '#/components/parameters/X-Request-ID'
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/AuditLog'
              meta:
                $ref: '#/components/schemas/ResponseMeta'
            required: [data, meta]
          example:
            data:
              id: "log-123"
              module: "auth"
              action: "LOGIN"
              actor_id: "user-123"
              actor_type: "user"
              created_at: "2025-06-07T10:00:00Z"
            meta:
              request_id: "abc-req-id"
              timestamp: "2025-06-07T10:00:00Z"

    ListResponse:
      description: Danh s√°ch b·∫£n ghi log
      headers:
        X-Request-ID:
          $ref: '#/components/parameters/X-Request-ID'
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/AuditLog'
              meta:
                allOf:
                  - $ref: '#/components/schemas/ResponseMeta'
                  - type: object
                    properties:
                      page:
                        type: integer
                        example: 1
                      limit:
                        type: integer
                        example: 20
                      total_items:
                        type: integer
                        example: 132
            required: [data, meta]
          example:
            data:
              - id: "log-001"
                module: "report"
                action: "EXPORT"
                actor_id: "teacher-999"
                actor_type: "user"
                created_at: "2025-06-07T09:00:00Z"
            meta:
              request_id: "xyz-001"
              timestamp: "2025-06-07T09:00:01Z"
              page: 1
              limit: 20
              total_items: 1

    BadRequest:
      description: D·ªØ li·ªáu g·ª≠i l√™n kh√¥ng h·ª£p l·ªá (400 Bad Request)
      headers:
        X-Request-ID:
          $ref: '#/components/parameters/X-Request-ID'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorEnvelope'
          example:
            error:
              code: VALIDATION_ERROR
              message: "Tr∆∞·ªùng 'actor_id' l√† b·∫Øt bu·ªôc"
            meta:
              request_id: "req-bad-001"
              timestamp: "2025-06-07T10:12:00Z"

    NotFound:
      description: Kh√¥ng t√¨m th·∫•y t√†i nguy√™n
      headers:
        X-Request-ID:
          $ref: '#/components/parameters/X-Request-ID'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorEnvelope'
          example:
            error:
              code: NOT_FOUND
              message: Kh√¥ng t√¨m th·∫•y b·∫£n ghi
            meta:
              request_id: "req-not-found"
              timestamp: "2025-06-07T08:00:00Z"

    ErrorResponse:
      description: Ph·∫£n h·ªìi l·ªói chu·∫©n ho√° (ADR-011)
      headers:
        X-Request-ID:
          $ref: '#/components/parameters/X-Request-ID'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorEnvelope'
          examples:
            Unauthorized:
              summary: Thi·∫øu token
              value:
                error:
                  code: UNAUTHORIZED
                  message: Token kh√¥ng h·ª£p l·ªá ho·∫∑c ƒë√£ h·∫øt h·∫°n
                meta:
                  request_id: "unauth-001"
                  timestamp: "2025-06-07T07:59:00Z"
            Forbidden:
              summary: Kh√¥ng ƒë·ªß quy·ªÅn truy c·∫≠p
              value:
                error:
                  code: FORBIDDEN
                  message: B·∫°n kh√¥ng c√≥ quy·ªÅn th·ª±c hi·ªán h√†nh ƒë·ªông n√†y
                meta:
                  request_id: "forbid-123"
                  timestamp: "2025-06-07T08:01:00Z"
            ValidationError:
              summary: D·ªØ li·ªáu g·ª≠i l√™n kh√¥ng h·ª£p l·ªá
              value:
                error:
                  code: VALIDATION_ERROR
                  message: Tr∆∞·ªùng `actor_id` l√† b·∫Øt bu·ªôc
                meta:
                  request_id: "valid-err"
                  timestamp: "2025-06-07T08:02:00Z"

  schemas:
    ResponseMeta:
      type: object
      description: Th√¥ng tin metadata tr·∫£ v·ªÅ theo chu·∫©n ADR-012
      properties:
        request_id:
          type: string
          example: "f1893210-a24d-4f88-9085-1d2dba336f59"
        timestamp:
          type: string
          format: date-time
          example: "2025-06-08T12:30:00Z"

    AuditLogCreate:
      type: object
      required: [module, action, actor_id, actor_type, created_at]
      properties:
        module: { type: string, description: "T√™n module kh·ªüi ph√°t h√†nh vi", example: "auth" }
        action: { $ref: "#/components/schemas/ActionEnum" }
        actor_id: { type: string, description: "ID c·ªßa actor th·ª±c hi·ªán" }
        actor_type: { $ref: "#/components/schemas/ActorTypeEnum" }
        target_id: { type: string }
        target_type: { $ref: "#/components/schemas/TargetTypeEnum" }
        source: { $ref: "#/components/schemas/SourceEnum" }
        metadata:
          type: object
          additionalProperties: true
          description: D·ªØ li·ªáu b·ªï sung cho log

    AuditLogResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/AuditLog"

    AuditLog:
      type: object
      readOnly: true
      properties:
        id: { type: string, format: uuid, readOnly: true }
        module: { type: string }
        action: { $ref: "#/components/schemas/ActionEnum" }
        actor_id: { type: string, }
        actor_type: { $ref: "#/components/schemas/ActorTypeEnum" }
        target_id: { type: string }
        target_type: { $ref: "#/components/schemas/TargetTypeEnum" }
        source: { $ref: "#/components/schemas/SourceEnum" }
        metadata: { type: object, additionalProperties: true }
        created_at: { type: string, format: date-time, readOnly: true }

    AuditLogListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/AuditLog"
        meta:
          type: object
          properties:
            page: { type: integer }
            limit: { type: integer }
            total_items: { type: integer }

    ActionEnum:
      type: string
      enum: [CREATE, UPDATE, DELETE, LOGIN, LOGOUT, APPROVE, REJECT, IMPORT, EXPORT, ASSIGN_ROLE]

    ActorTypeEnum:
      type: string
      enum: [user, parent, system, service_account, superadmin]

    TargetTypeEnum:
      type: string
      enum: [USER, STUDENT, ROLE, TEMPLATE, CONFIG, REPORT]

    SourceEnum:
      type: string
      enum: [WebApp, MobileApp, API Gateway, InternalJob, Script]

    ErrorEnvelope:
      type: object
      properties:
        error:
          type: object
          properties:
            code: { type: string }
            message: { type: string }
            details: { type: string }
        meta:
          type: object

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - BearerAuth: []

paths:
  /audit-logs:
    post:
      summary: Ghi m·ªôt b·∫£n ghi log ƒë∆°n l·∫ª
      operationId: createAuditLog
      description: D√πng ƒë·ªÉ ghi m·ªôt b·∫£n ghi audit log t·ª´ m·ªôt h√†nh vi c·ª• th·ªÉ trong h·ªá th·ªëng.
      tags: [audit-logs]
      x-required-permission: audit.create.logs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuditLogCreate'
            example:
              module: "auth"
              action: "LOGIN"
              actor_id: "user-123"
              actor_type: "user"
              target_id: "user-123"
              target_type: "USER"
              source: "WebApp"
              metadata:
                ip: "192.168.0.1"
                user_agent: "Mozilla/5.0"
      responses:
        "201":
          $ref: '#/components/responses/CreatedResponse'
        "400":
          $ref: "#/components/responses/BadRequest"
        default:
          $ref: "#/components/responses/ErrorResponse"
      parameters:
        - $ref: "#/components/parameters/X-Request-ID"
        - $ref: "#/components/parameters/X-Tenant-ID"

    get:
      summary: Truy v·∫•n danh s√°ch log theo b·ªô l·ªçc
      operationId: listAuditLogs
      description: Tr·∫£ v·ªÅ danh s√°ch b·∫£n ghi log theo c√°c ti√™u ch√≠ truy v·∫•n nh∆∞ module, actor, target, th·ªùi gian...
      tags: [audit-logs]
      x-required-permission: audit.read.logs
      parameters:
        - $ref: "#/components/parameters/X-Request-ID"
        - $ref: "#/components/parameters/X-Tenant-ID"
        - $ref: "#/components/parameters/Page"
        - $ref: "#/components/parameters/Limit"
      responses:
        "200":
          $ref: "#/components/responses/ListResponse"    
        default:
          $ref: "#/components/responses/ErrorResponse"

  /audit-logs/{id}:
    get:
      summary: L·∫•y chi ti·∫øt m·ªôt b·∫£n ghi log
      operationId: getAuditLogById
      description: Tr·∫£ v·ªÅ th√¥ng tin chi ti·∫øt c·ªßa m·ªôt b·∫£n ghi audit log theo ID
      tags: [audit-logs]
      x-required-permission: audit.read.logs
      parameters:
        - $ref: "#/components/parameters/X-Request-ID"
        - $ref: "#/components/parameters/X-Tenant-ID"
        - name: id
          in: path
          required: true
          schema: { type: string, format: uuid }
      responses:
        "200":
          $ref: "#/components/responses/CreatedResponse"
        "404":
          $ref: "#/components/responses/NotFound"   
        default:
          $ref: "#/components/responses/ErrorResponse"

  /audit-logs/bulk:
    post:
      summary: Ghi nhi·ªÅu b·∫£n ghi log c√πng l√∫c
      operationId: createAuditLogsBulk
      description: |
        Endpoint d√πng ƒë·ªÉ ghi nhi·ªÅu b·∫£n ghi `audit log` c√πng l√∫c trong c√°c t√¨nh hu·ªëng nh∆∞ batch job ho·∫∑c multi-event.
        Y√™u c·∫ßu d·ªØ li·ªáu ƒë·∫ßu v√†o l√† danh s√°ch c√°c b·∫£n ghi h·ª£p l·ªá theo schema `AuditLogCreate`.
      tags: [audit-logs]
      x-required-permission: audit.create.logs
      parameters:
        - $ref: "#/components/parameters/X-Request-ID"
        - $ref: "#/components/parameters/X-Tenant-ID"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [logs]
              properties:
                logs:
                  type: array
                  items:
                    $ref: '#/components/schemas/AuditLogCreate'
            example:
              logs:
                - module: "auth"
                  action: "LOGIN"
                  actor_id: "user-123"
                  actor_type: "user"
                  source: "WebApp"
                  metadata:
                    ip: "192.168.0.1"
                - module: "report"
                  action: "EXPORT"
                  actor_id: "staff-456"
                  actor_type: "user"
                  source: "WebApp"
                  metadata:
                    report_id: "rpt-88"
      responses:
        "201":
          $ref: "#/components/responses/CreatedResponse"
        "400":
          $ref: "#/components/responses/BadRequest"          
        default:
          $ref: "#/components/responses/ErrorResponse"
