# ===============================
# üìò User Service Sub ‚Äì OpenAPI Spec (5‚òÖ version)
# ===============================

openapi: 3.0.3
info:
  title: User Service Sub ‚Äì API Spec
  version: 1.0.0
  description: |
    OpenAPI specification for user-service/sub.
    Tu√¢n th·ªß ADR-012, ADR-011 v√† c√°c nguy√™n t·∫Øc RBAC ƒë·ªông theo ADR-027.
    Xem th√™m t√†i li·ªáu thi·∫øt k·∫ø t·∫°i: [design.md](../design.md) v√† [interface-contract.md](../interface-contract.md)
  contact:
    name: VAS DX Architecture Team
    email: dx-vas@truongvietanh.edu.vn

  x-api-version: v1
  x-maintainer: dx-team@truongvietanh.edu.vn
  x-adr-compliance:
    - adr-011-api-error-format
    - adr-012-response-structure
    - adr-026-hard-delete-policy
    - adr-027-data-management-strategy

externalDocs:
  description: Design and Interface Documentation
  url: https://github.com/ezdesign-vn/dx-vas/tree/main/docs/services/user-service/sub/

servers:
  - url: https://api.truongvietanh.edu.vn/user-sub
    description: Production (tenant-scoped)
  - url: https://staging.api.truongvietanh.edu.vn/user-sub
    description: Staging    

tags:
  - name: users
    description: Th√¥ng tin ng∆∞·ªùi d√πng trong tenant
  - name: rbac
    description: Th√¥ng tin RBAC template ƒë√£ ƒë·ªìng b·ªô

security:
  - BearerAuth: []

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  headers:
    X-Request-ID:
      description: Unique ID assigned to each request for tracing/debugging
      schema:
        type: string
      example: 7e8f7f34-b12a-4d8c-b32f-6db7d326f7d2

  parameters:
    AuthorizationHeader:
      name: Authorization
      in: header
      required: true
      schema:
        type: string
      description: "Bearer JWT token (format: 'Bearer <access_token>')"

  schemas:
    # üß© Meta wrapper
    ResponseMeta:
      type: object
      required: [request_id, timestamp]
      properties:
        request_id:
          type: string
          description: M√£ ƒë·ªãnh danh c·ªßa request
          example: req-xyz-789
        timestamp:
          type: string
          format: date-time
          description: Th·ªùi gian tr·∫£ v·ªÅ response
          example: "2024-05-20T10:15:00Z"
        page:
          type: integer
          nullable: true
          description: S·ªë trang hi·ªán t·∫°i (n·∫øu c√≥)
          example: 1
        per_page:
          type: integer
          nullable: true
          description: S·ªë b·∫£n ghi m·ªói trang
          example: 20
        total:
          type: integer
          nullable: true
          description: T·ªïng s·ªë b·∫£n ghi
          example: 125

    ErrorEnvelope:
      type: object
      required: [meta, error]
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        error:
          $ref: '#/components/schemas/ErrorResponse'

    ErrorResponse:
      type: object
      description: C·∫•u tr√∫c th√¥ng b√°o l·ªói
      properties:
        code:
          type: string
          example: "FORBIDDEN"
        message:
          type: string
          example: "B·∫°n kh√¥ng c√≥ quy·ªÅn truy c·∫≠p t√†i nguy√™n n√†y."

    # ‚úÖ Enums
    AuthProvider:
      type: string
      enum: [local, google]
    UserStatus:
      type: string
      enum: [active, invited, suspended, deleted]

    # ‚úÖ User Schemas
    UserOut:
      type: object
      description: Th√¥ng tin ng∆∞·ªùi d√πng trong tenant
      properties:
        user_id:
          type: string
          description: ID to√†n c·ª•c c·ªßa ng∆∞·ªùi d√πng
          example: "user-123"
        full_name:
          type: string
          description: H·ªç t√™n ƒë·∫ßy ƒë·ªß
          example: "Nguy·ªÖn VƒÉn A"
        email:
          type: string
          description: Email ng∆∞·ªùi d√πng
          example: "a.nguyen@example.com"
        status:
          $ref: '#/components/schemas/UserStatus'
        created_at:
          type: string
          format: date-time
          description: Th·ªùi gian t·∫°o
          readOnly: true
          example: "2024-05-01T12:00:00Z"

    UserListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/UserOut'
        meta:
          $ref: '#/components/schemas/ResponseMeta'

    # ‚úÖ Roles
    RoleOut:
      type: object
      properties:
        role_code:
          type: string
        name:
          type: string
        description:
          type: string

    RoleListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/RoleOut'
        meta:
          $ref: '#/components/schemas/ResponseMeta'

    # ‚úÖ Permissions
    PermissionOut:
      type: object
      properties:
        code:
          type: string
        resource:
          type: string
        action:
          type: string
        description:
          type: string

    PermissionListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/PermissionOut'
        meta:
          $ref: '#/components/schemas/ResponseMeta'

    # ‚úÖ Permissions for current user
    PermissionStringsResponse:
      type: object
      properties:
        data:
          type: array
          items:
            type: string
        meta:
          $ref: '#/components/schemas/ResponseMeta'

  responses:
    UnauthorizedError:
      description: Kh√¥ng x√°c th·ª±c
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorEnvelope'

    ForbiddenError:
      description: Kh√¥ng ƒë·ªß quy·ªÅn
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorEnvelope'

    InternalServerError:
      description: L·ªói h·ªá th·ªëng n·ªôi b·ªô
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorEnvelope'

paths:
  /users:
    get:
      summary: Danh s√°ch ng∆∞·ªùi d√πng trong tenant
      description: Tr·∫£ v·ªÅ danh s√°ch ng∆∞·ªùi d√πng trong tenant hi·ªán t·∫°i. H·ªó tr·ª£ t√¨m ki·∫øm, ph√¢n trang v√† s·∫Øp x·∫øp.
      x-required-permission: tenant.read_users
      parameters:
        - $ref: '#/components/parameters/AuthorizationHeader'
        - name: page
          in: query
          schema: { type: integer, default: 1, minimum: 1 }
          description: S·ªë trang
        - name: limit
          in: query
          schema: { type: integer, default: 20, minimum: 1, maximum: 100 }
          description: S·ªë b·∫£n ghi m·ªói trang
        - name: search
          in: query
          schema: { type: string }
          description: T√¨m theo t√™n, email ho·∫∑c user_id
        - name: sort_by
          in: query
          schema:
            type: string
            enum: [created_at, full_name]
          description: Tr∆∞·ªùng ƒë·ªÉ s·∫Øp x·∫øp
        - name: sort_order
          in: query
          schema:
            type: string
            enum: [asc, desc]
          description: Th·ª© t·ª± s·∫Øp x·∫øp
      responses:
        '200':
          description: Danh s√°ch user
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListResponse'
        '401':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/ForbiddenError'
        '500':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/InternalServerError'

  /users/me:
    get:
      tags: [users]
      summary: L·∫•y th√¥ng tin user hi·ªán t·∫°i
      parameters:
        - $ref: '#/components/parameters/AuthorizationHeader'
      responses:
        '200':
          description: OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOut'
        '401':
          description: Ch∆∞a x√°c th·ª±c
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'

  /users/me/permissions:
    get:
      tags: [users]
      summary: L·∫•y quy·ªÅn hi·ªán t·∫°i c·ªßa user
      parameters:
        - $ref: '#/components/parameters/AuthorizationHeader'
      responses:
        '200':
          description: OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionStringsResponse'
        '401':
          description: Ch∆∞a x√°c th·ª±c
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'

  /roles:
    get:
      tags: [rbac]
      summary: Danh s√°ch role templates
      x-required-permission: tenant.view_rbac_config
      parameters:
        - $ref: '#/components/parameters/AuthorizationHeader'
      responses:
        '200':
          description: OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleListResponse'
        '401':
          description: Ch∆∞a x√°c th·ª±c
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
        '403':
          description: Kh√¥ng ƒë·ªß quy·ªÅn
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'

  /permissions:
    get:
      tags: [rbac]
      summary: Danh s√°ch permission templates
      x-required-permission: tenant.view_rbac_config
      parameters:
        - $ref: '#/components/parameters/AuthorizationHeader'
      responses:
        '200':
          description: OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionListResponse'
        '401':
          description: Ch∆∞a x√°c th·ª±c
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
        '403':
          description: Kh√¥ng ƒë·ªß quy·ªÅn
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
