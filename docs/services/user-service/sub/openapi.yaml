# ===============================
# üìò User Service Sub ‚Äì OpenAPI Spec (5‚òÖ version)
# ===============================

openapi: 3.0.3
info:
  title: User Service Sub ‚Äì API Spec
  version: 1.0.0
  description: |
    OpenAPI specification cho `user-service/sub` ‚Äì ph·ª•c v·ª• ƒë·ªçc d·ªØ li·ªáu ng∆∞·ªùi d√πng trong 1 tenant c·ª• th·ªÉ theo m√¥ h√¨nh master/sub.
    C√°c API ch·ªâ cung c·∫•p quy·ªÅn truy v·∫•n (read-only) v√† lu√¥n tr·∫£ v·ªÅ theo chu·∫©n [ADR-012](../../../ADR/adr-012-response-structure.md).

servers:
  - url: https://api.truongvietanh.edu.vn/user-sub
    description: Production (tenant-scoped)

tags:
  - name: users
    description: Th√¥ng tin ng∆∞·ªùi d√πng trong tenant
  - name: rbac
    description: Th√¥ng tin RBAC template ƒë√£ ƒë·ªìng b·ªô

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    # üß© Meta wrapper
    ResponseMeta:
      type: object
      required: [request_id, timestamp]
      properties:
        request_id:
          type: string
        timestamp:
          type: string
          format: date-time
        page:
          type: integer
          nullable: true
        per_page:
          type: integer
          nullable: true
        total:
          type: integer
          nullable: true

    ErrorEnvelope:
      type: object
      required: [meta, error]
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        error:
          $ref: '#/components/schemas/ErrorResponse'

    ErrorResponse:
      type: object
      required: [code, message]
      properties:
        code:
          type: string
          example: USER_NOT_FOUND
        message:
          type: string
          example: Ng∆∞·ªùi d√πng kh√¥ng t·ªìn t·∫°i

    # ‚úÖ Enums
    AuthProvider:
      type: string
      enum: [local, google]
    UserStatus:
      type: string
      enum: [active, invited, suspended, deleted]

    # ‚úÖ User Schemas
    UserOut:
      type: object
      properties:
        user_id:
          type: string
          format: uuid
        full_name:
          type: string
        email:
          type: string
          format: email
        status:
          $ref: '#/components/schemas/UserStatus'
        is_active_in_tenant:
          type: boolean
        auth_provider:
          $ref: '#/components/schemas/AuthProvider'
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true

    UserListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/UserOut'
        meta:
          $ref: '#/components/schemas/ResponseMeta'

    # ‚úÖ Roles
    RoleOut:
      type: object
      properties:
        role_code:
          type: string
        name:
          type: string
        description:
          type: string

    RoleListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/RoleOut'
        meta:
          $ref: '#/components/schemas/ResponseMeta'

    # ‚úÖ Permissions
    PermissionOut:
      type: object
      properties:
        code:
          type: string
        resource:
          type: string
        action:
          type: string
        description:
          type: string

    PermissionListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/PermissionOut'
        meta:
          $ref: '#/components/schemas/ResponseMeta'

    # ‚úÖ Permissions for current user
    PermissionStringsResponse:
      type: object
      properties:
        data:
          type: array
          items:
            type: string
        meta:
          $ref: '#/components/schemas/ResponseMeta'

paths:
  /users:
    get:
      tags: [users]
      summary: Danh s√°ch ng∆∞·ªùi d√πng trong tenant
      x-required-permission: tenant.read_users
      parameters:
        - name: page
          in: query
          schema: { type: integer, default: 1, minimum: 1 }
        - name: limit
          in: query
          schema: { type: integer, default: 20, minimum: 1, maximum: 100 }
        - name: search
          in: query
          schema: { type: string }
      responses:
        '200':
          description: Th√†nh c√¥ng
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListResponse'
        '401':
          description: Ch∆∞a x√°c th·ª±c
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
        '403':
          description: Kh√¥ng ƒë·ªß quy·ªÅn
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'

  /users/me:
    get:
      tags: [users]
      summary: L·∫•y th√¥ng tin user hi·ªán t·∫°i
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOut'
        '401':
          description: Ch∆∞a x√°c th·ª±c
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'

  /users/me/permissions:
    get:
      tags: [users]
      summary: L·∫•y quy·ªÅn hi·ªán t·∫°i c·ªßa user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionStringsResponse'
        '401':
          description: Ch∆∞a x√°c th·ª±c
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'

  /roles:
    get:
      tags: [rbac]
      summary: Danh s√°ch role templates
      x-required-permission: tenant.view_rbac_config
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleListResponse'
        '401':
          description: Ch∆∞a x√°c th·ª±c
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
        '403':
          description: Kh√¥ng ƒë·ªß quy·ªÅn
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'

  /permissions:
    get:
      tags: [rbac]
      summary: Danh s√°ch permission templates
      x-required-permission: tenant.view_rbac_config
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionListResponse'
        '401':
          description: Ch∆∞a x√°c th·ª±c
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
        '403':
          description: Kh√¥ng ƒë·ªß quy·ªÅn
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
