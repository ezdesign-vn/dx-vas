openapi: 3.0.3
info:
  title: User Service Master ‚Äì API Spec
  version: 1.2.0
  description: |
    API cho User Service Master, ph·ª•c v·ª• qu·∫£n l√Ω ng∆∞·ªùi d√πng to√†n c·ª•c (Global Users), tenant (tr∆∞·ªùng th√†nh vi√™n), v√† RBAC templates.
    T√†i li·ªáu n√†y tu√¢n th·ªß [ADR-012 - Response Structure](https://dx-api.truongvietanh.edu.vn/ADR/adr-012-response-structure),
    [ADR-011 - API Error Format](https://dx-api.truongvietanh.edu.vn/ADR/adr-011-api-error-format),
    v√† ti√™u chu·∫©n 5‚òÖ cho OpenAPI.
    - üìÑ Xem th√™m: [design.md](../design.md), [interface-contract.md](../interface-contract.md), [data-model.md](../data-model.md)
  contact:
    name: DX Platform Team
    email: dx@truongvietanh.edu.vn
  
  x-api-version: v1
  x-maintainer: dx-team@truongvietanh.edu.vn
  x-adr-compliance:
    - adr-011-api-error-format
    - adr-012-response-structure
    - adr-026-hard-delete-policy
    - adr-027-data-management-strategy

servers:
  - url: https://api.truongvietanh.edu.vn/user-service-master/
    description: Production Server
  - url: https://staging-api.truongvietanh.edu.vn/user-service-master/
    description: Staging

tags:
  - name: users-global
    description: Qu·∫£n l√Ω ng∆∞·ªùi d√πng to√†n c·ª•c
  - name: tenants
    description: Qu·∫£n l√Ω tr∆∞·ªùng th√†nh vi√™n (tenant)
  - name: rbac-templates
    description: Qu·∫£n l√Ω template role v√† permission d√πng cho RBAC ƒë·ªông

security:
  - BearerAuth: []

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  parameters:
    AuthorizationHeader:
      name: Authorization
      in: header
      required: true
      schema:
        type: string
      description: "Bearer JWT token (format: 'Bearer <access_token>')"

    Page:
      name: page
      in: query
      required: false
      schema:
        type: integer
        minimum: 1
        default: 1
      description: Trang hi·ªán t·∫°i (m·∫∑c ƒë·ªãnh = 1)

    Limit:
      name: limit
      in: query
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 20
      description: S·ªë l∆∞·ª£ng b·∫£n ghi m·ªói trang (m·∫∑c ƒë·ªãnh = 20)

    SearchKeyword:
      name: search
      in: query
      required: false
      schema:
        type: string
      description: T√¨m ki·∫øm theo t√™n, email ho·∫∑c m√£

    SortOrder:
      name: sort_order
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/SortOrderEnum'
      description: Th·ª© t·ª± s·∫Øp x·∫øp (tƒÉng ho·∫∑c gi·∫£m d·∫ßn)

    UserGlobalSortBy:
      name: sort_by
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/UserGlobalSortByEnum'
      description: Tr∆∞·ªùng d√πng ƒë·ªÉ s·∫Øp x·∫øp danh s√°ch ng∆∞·ªùi d√πng to√†n c·ª•c

    TenantSortBy:
      name: sort_by
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/TenantSortByEnum'
      description: Tr∆∞·ªùng d√πng ƒë·ªÉ s·∫Øp x·∫øp danh s√°ch tenant

    UserTenantAssignmentsSortBy:
      name: sort_by
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/UserTenantAssignmentsSortByEnum'
      description: Tr∆∞·ªùng d√πng ƒë·ªÉ s·∫Øp x·∫øp danh s√°ch ph√¢n quy·ªÅn ng∆∞·ªùi d√πng v√†o tenant

    RoleTemplateSortBy:
      name: sort_by
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/RoleTemplateSortByEnum'
      description: Tr∆∞·ªùng d√πng ƒë·ªÉ s·∫Øp x·∫øp danh s√°ch role template

    PermissionTemplateSortBy:
      name: sort_by
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/PermissionTemplateSortByEnum'
      description: Tr∆∞·ªùng d√πng ƒë·ªÉ s·∫Øp x·∫øp danh s√°ch permission template

  headers:
    X-Request-ID:
      description: ID ƒë·ªãnh danh duy nh·∫•t cho m·ªói request ‚Äì gi√∫p trace log hi·ªáu qu·∫£
      required: false
      schema:
        type: string
      example: req_01H8X4YJ4GVN3YX4MH6ZQ1M3Q0

  schemas:
    # üß© Meta wrapper
    ResponseMeta:
      type: object
      required: [request_id, timestamp]
      properties:
        request_id:
          type: string
          description: M√£ ƒë·ªãnh danh c·ªßa request
          example: req-xyz-789
        timestamp:
          type: string
          format: date-time
          description: Th·ªùi gian tr·∫£ v·ªÅ response
          example: "2024-05-20T10:15:00Z"
        page:
          type: integer
          nullable: true
          description: S·ªë trang hi·ªán t·∫°i (n·∫øu c√≥)
          example: 1
        per_page:
          type: integer
          nullable: true
          description: S·ªë b·∫£n ghi m·ªói trang
          example: 20
        total:
          type: integer
          nullable: true
          description: T·ªïng s·ªë b·∫£n ghi
          example: 125

    ErrorEnvelope:
      type: object
      required: [meta, error]
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        error:
          $ref: '#/components/schemas/ErrorResponse'

    ErrorResponse:
      type: object
      description: C·∫•u tr√∫c th√¥ng b√°o l·ªói
      properties:
        code:
          type: string
          example: "FORBIDDEN"
        message:
          type: string
          example: "B·∫°n kh√¥ng c√≥ quy·ªÅn truy c·∫≠p t√†i nguy√™n n√†y."

    # --- ENUMS ---
    TenantStatusEnum:
      type: string
      enum: [active, inactive, suspended, archived]
      description: Tr·∫°ng th√°i ho·∫°t ƒë·ªông c·ªßa tenant (tr∆∞·ªùng th√†nh vi√™n)
      example: active

    UserStatusEnum:
      type: string
      enum: [active, inactive, invited, suspended, deleted]
      description: Tr·∫°ng th√°i ho·∫°t ƒë·ªông c·ªßa ng∆∞·ªùi d√πng
      example: active

    AssignmentStatusEnum:
      type: string
      enum: [active, revoked, pending, suspended, rejected]
      description: Tr·∫°ng th√°i ph√¢n quy·ªÅn ng∆∞·ªùi d√πng trong tenant
      example: active

    SortOrderEnum:
      type: string
      enum: [asc, desc]
      description: Th·ª© t·ª± s·∫Øp x·∫øp (tƒÉng/gi·∫£m)

    AuthProviderEnum:
      type: string
      enum: [local, google, otp]
      description: Lo·∫°i ƒëƒÉng nh·∫≠p c·ªßa ng∆∞·ªùi d√πng
      example: google

    UserGlobalSortByEnum:
      type: string
      enum: [created_at, full_name]
      description: Tr∆∞·ªùng d√πng ƒë·ªÉ s·∫Øp x·∫øp danh s√°ch ng∆∞·ªùi d√πng to√†n c·ª•c

    TenantSortByEnum:
      type: string
      enum: [created_at, name]
      description: Tr∆∞·ªùng d√πng ƒë·ªÉ s·∫Øp x·∫øp danh s√°ch tenant

    UserTenantAssignmentsSortByEnum:
      type: string
      enum: [created_at]
      description: Tr∆∞·ªùng d√πng ƒë·ªÉ s·∫Øp x·∫øp danh s√°ch User Tenant Assignments

    RoleTemplateSortByEnum:
      type: string
      enum: [template_code, created_at]
      description: Tr∆∞·ªùng d√πng ƒë·ªÉ s·∫Øp x·∫øp danh s√°ch role template

    PermissionTemplateSortByEnum:
      type: string
      enum: [permission_code, created_at]
      description: Tr∆∞·ªùng d√πng ƒë·ªÉ s·∫Øp x·∫øp danh s√°ch permission template

    # --- OBJECT SCHEMAS ---

    UserGlobalResponse:
      type: object
      description: Th√¥ng tin ng∆∞·ªùi d√πng to√†n c·ª•c (d√πng trong response)
      properties:
        user_id:
          type: string
          description: ID duy nh·∫•t c·ªßa ng∆∞·ªùi d√πng
          example: "user_abc123"
        email:
          type: string
          format: email
          description: Email ƒëƒÉng nh·∫≠p
          example: "alice@example.com"
        full_name:
          type: string
          description: H·ªç v√† t√™n ng∆∞·ªùi d√πng
          example: "Alice Nguyen"
        status:
          $ref: '#/components/schemas/UserStatusEnum'
        auth_provider:
          $ref: '#/components/schemas/AuthProviderEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Th·ªùi ƒëi·ªÉm t·∫°o user
          example: "2024-05-01T10:00:00Z"
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Th·ªùi ƒëi·ªÉm c·∫≠p nh·∫≠t user g·∫ßn nh·∫•t
          example: "2024-06-01T15:45:00Z"

    TenantResponse:
      type: object
      description: Th√¥ng tin tenant (tr∆∞·ªùng th√†nh vi√™n)
      properties:
        tenant_id:
          type: string
          description: M√£ ƒë·ªãnh danh duy nh·∫•t c·ªßa tenant
          example: "school_tva"
        name:
          type: string
          description: T√™n hi·ªÉn th·ªã c·ªßa tenant
          example: "Tr∆∞·ªùng Vi·ªát Anh"
        status:
          $ref: '#/components/schemas/TenantStatusEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Ng√†y t·∫°o tenant
          example: "2024-01-10T00:00:00Z"
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Ng√†y c·∫≠p nh·∫≠t tenant g·∫ßn nh·∫•t
          example: "2024-06-01T00:00:00Z"

    RoleTemplateResponse:
      type: object
      description: Th√¥ng tin role template
      properties:
        template_code:
          type: string
          description: M√£ ƒë·ªãnh danh duy nh·∫•t c·ªßa role template
          example: "student"
        name:
          type: string
          description: T√™n hi·ªÉn th·ªã c·ªßa role
          example: "H·ªçc sinh"
        description:
          type: string
          description: M√¥ t·∫£ vai tr√≤
          example: "Quy·ªÅn d√†nh cho h·ªçc sinh"
        permissions:
          type: array
          items:
            type: string
          description: Danh s√°ch permission code ƒëi k√®m
          example: ["user.view_profile", "homework.submit"]
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Th·ªùi ƒëi·ªÉm t·∫°o role template
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Th·ªùi ƒëi·ªÉm c·∫≠p nh·∫≠t g·∫ßn nh·∫•t

    PermissionTemplateResponse:
      type: object
      description: Th√¥ng tin permission template
      properties:
        permission_code:
          type: string
          description: M√£ ƒë·ªãnh danh c·ªßa permission
          example: "user.view_profile"
        name:
          type: string
          description: T√™n hi·ªÉn th·ªã
          example: "Xem th√¥ng tin ng∆∞·ªùi d√πng"
        description:
          type: string
          description: M√¥ t·∫£ quy·ªÅn
          example: "Cho ph√©p ng∆∞·ªùi d√πng xem th√¥ng tin h·ªì s∆°"
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Th·ªùi ƒëi·ªÉm t·∫°o
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Th·ªùi ƒëi·ªÉm c·∫≠p nh·∫≠t g·∫ßn nh·∫•t

    UserTenantAssignmentResponse:
      type: object
      description: Th√¥ng tin ph√¢n quy·ªÅn user t·ªõi tenant
      properties:
        tenant_id:
          type: string
          description: M√£ tenant g√°n cho user
          example: "school_tva"
        user_id:
          type: string
          description: ID ng∆∞·ªùi d√πng
          example: "user_abc123"
        role_codes:
          type: array
          items:
            type: string
          description: Danh s√°ch role_code ƒë∆∞·ª£c g√°n
        status:
          $ref: '#/components/schemas/AssignmentStatusEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true

    UserGlobalCreateRequest:
      type: object
      required: [full_name, email, auth_provider]
      properties:
        full_name:
          type: string
          description: H·ªç v√† t√™n ƒë·∫ßy ƒë·ªß c·ªßa ng∆∞·ªùi d√πng
          example: Nguy·ªÖn VƒÉn A
        email:
          type: string
          format: email
          description: ƒê·ªãa ch·ªâ email
          example: nguyenvana@example.com
        auth_provider:
          $ref: '#/components/schemas/AuthProviderEnum'

    UserGlobalUpdateRequest:
      type: object
      properties:
        full_name:
          type: string
          description: H·ªç t√™n m·ªõi c·ªßa ng∆∞·ªùi d√πng
          example: Nguy·ªÖn VƒÉn B
        email:
          type: string
          format: email
          description: ƒê·ªãa ch·ªâ email m·ªõi
          example: nguyenvanb@example.com
        auth_provider:
          $ref: '#/components/schemas/AuthProviderEnum'

    UserGlobalStatusUpdateRequest:
      type: object
      required: [status]
      properties:
        status:
          $ref: '#/components/schemas/UserStatusEnum'

    TenantCreateRequest:
      type: object
      required: [name]
      properties:
        name:
          type: string
          description: T√™n tr∆∞·ªùng th√†nh vi√™n (tenant)
          example: Tr∆∞·ªùng Ti·ªÉu h·ªçc Vi·ªát Anh C√† Mau

    TenantUpdateRequest:
      type: object
      properties:
        name:
          type: string
          description: T√™n m·ªõi c·ªßa tr∆∞·ªùng th√†nh vi√™n
          example: Tr∆∞·ªùng Vi·ªát Anh Campus 2

    UserTenantAssignmentCreateRequest:
      type: object
      required: [user_id, tenant_id, role_codes]
      properties:
        user_id:
          type: string
          format: uuid
          description: ID c·ªßa ng∆∞·ªùi d√πng to√†n c·ª•c
          example: d79c9f7e-b4de-4a32-a20c-4c1f647d8c63
        tenant_id:
          type: string
          format: uuid
          description: ID c·ªßa tenant
          example: 0edb94d1-5d55-4fcf-97e9-b68c05e7a170
        role_codes:
          type: array
          items:
            type: string
          description: Danh s√°ch m√£ vai tr√≤ ƒë∆∞·ª£c g√°n
          example: [teacher, homeroom]

    UserTenantAssignmentUpdateRequest:
      type: object
      properties:
        role_codes:
          type: array
          items:
            type: string
          description: Danh s√°ch m√£ vai tr√≤ m·ªõi
          example: [coordinator, supervisor]

    UserTenantAssignmentStatusUpdateRequest:
      type: object
      required: [status]
      properties:
        status:
          $ref: '#/components/schemas/AssignmentStatusEnum'

    RoleTemplateCreateRequest:
      type: object
      required: [template_code, name, description, permissions]
      properties:
        template_code:
          type: string
          description: M√£ ƒë·ªãnh danh duy nh·∫•t c·ªßa role template
          example: teacher
        name:
          type: string
          description: T√™n vai tr√≤ (hi·ªÉn th·ªã cho ng∆∞·ªùi d√πng)
          example: Gi√°o vi√™n
        description:
          type: string
          description: M√¥ t·∫£ vai tr√≤
          example: Vai tr√≤ d√†nh cho gi√°o vi√™n b·ªô m√¥n ho·∫∑c gi√°o vi√™n ch·ªß nhi·ªám
        permissions:
          type: array
          items:
            type: string
          description: Danh s√°ch m√£ permission n·∫±m trong vai tr√≤ n√†y
          example: [student.view_profile, student.update_grades]

    RoleTemplateUpdateRequest:
      type: object
      properties:
        name:
          type: string
          description: T√™n m·ªõi c·ªßa role
        description:
          type: string
          description: M√¥ t·∫£ m·ªõi
        permissions:
          type: array
          items:
            type: string
          description: Danh s√°ch permission m·ªõi

    PermissionTemplateCreateRequest:
      type: object
      required: [permission_code, name, description]
      properties:
        permission_code:
          type: string
          description: M√£ permission duy nh·∫•t
          example: student.view_profile
        name:
          type: string
          description: T√™n permission
          example: Xem th√¥ng tin h·ªçc sinh
        description:
          type: string
          description: M√¥ t·∫£ chi ti·∫øt permission
          example: Cho ph√©p xem h·ªì s∆° h·ªçc sinh trong tenant

    PermissionTemplateUpdateRequest:
      type: object
      properties:
        name:
          type: string
          description: T√™n permission m·ªõi
        description:
          type: string
          description: M√¥ t·∫£ m·ªõi cho permission

#___Paginated___
    PaginatedUserGlobals:
      type: object
      description: K·∫øt qu·∫£ ph√¢n trang danh s√°ch ng∆∞·ªùi d√πng to√†n c·ª•c
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/UserGlobalResponse'
        meta:
          $ref: '#/components/schemas/ResponseMeta'
      example:
        data:
          - user_id: "abc123"
            full_name: "Nguy·ªÖn VƒÉn A"
            email: "a@example.com"
            status: "active"
            created_at: "2024-01-01T00:00:00Z"
            updated_at: "2024-01-02T00:00:00Z"
        meta:
          page: 1
          per_page: 20
          total: 120
          request_id: "req-xyz"

    PaginatedTenants:
      type: object
      description: K·∫øt qu·∫£ ph√¢n trang danh s√°ch tenant
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/TenantResponse'
        meta:
          $ref: '#/components/schemas/ResponseMeta'

    PaginatedUserTenantAssignments:
      type: object
      description: K·∫øt qu·∫£ ph√¢n trang danh s√°ch user-tenant-assignment
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/UserTenantAssignmentResponse'
        meta:
          $ref: '#/components/schemas/ResponseMeta'

    PaginatedRoleTemplates:
      type: object
      description: K·∫øt qu·∫£ ph√¢n trang danh s√°ch role template
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/RoleTemplateResponse'
        meta:
          $ref: '#/components/schemas/ResponseMeta'

    PaginatedPermissionTemplates:
      type: object
      description: K·∫øt qu·∫£ ph√¢n trang danh s√°ch permission template
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/PermissionTemplateResponse'
        meta:
          $ref: '#/components/schemas/ResponseMeta'

    #___Envelop___

    UserGlobalEnvelope:
      type: object
      description: K·∫øt qu·∫£ tr·∫£ v·ªÅ cho user global (ƒë∆°n l·∫ª)
      properties:
        data:
          $ref: '#/components/schemas/UserGlobalResponse'
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        error:
          type: object
          nullable: true

    TenantEnvelope:
      type: object
      description: K·∫øt qu·∫£ tr·∫£ v·ªÅ cho tenant (ƒë∆°n l·∫ª)
      properties:
        data:
          $ref: '#/components/schemas/TenantResponse'
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        error:
          type: object
          nullable: true

    UserTenantAssignmentEnvelope:
      type: object
      description: K·∫øt qu·∫£ tr·∫£ v·ªÅ cho user-tenant-assignment (ƒë∆°n l·∫ª)
      properties:
        data:
          $ref: '#/components/schemas/UserTenantAssignmentResponse'
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        error:
          type: object
          nullable: true

    RoleTemplateEnvelope:
      type: object
      description: K·∫øt qu·∫£ tr·∫£ v·ªÅ cho role template (ƒë∆°n l·∫ª)
      properties:
        data:
          $ref: '#/components/schemas/RoleTemplateResponse'
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        error:
          type: object
          nullable: true

    PermissionTemplateEnvelope:
      type: object
      description: K·∫øt qu·∫£ tr·∫£ v·ªÅ cho permission template (ƒë∆°n l·∫ª)
      properties:
        data:
          $ref: '#/components/schemas/PermissionTemplateResponse'
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        error:
          type: object
          nullable: true

  responses:
    BadRequestError:
      description: Y√™u c·∫ßu kh√¥ng h·ª£p l·ªá (Bad Request)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorEnvelope'

    UnauthorizedError:
      description: Ng∆∞·ªùi d√πng ch∆∞a ƒë∆∞·ª£c x√°c th·ª±c (Missing ho·∫∑c invalid token)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorEnvelope'

    ForbiddenError:
      description: Ng∆∞·ªùi d√πng kh√¥ng c√≥ ƒë·ªß quy·ªÅn truy c·∫≠p API n√†y
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorEnvelope'

    NotFoundError:
      description: T√†i nguy√™n kh√¥ng t·ªìn t·∫°i
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorEnvelope'

    ConflictError:
      description: D·ªØ li·ªáu xung ƒë·ªôt (ƒë√£ t·ªìn t·∫°i ho·∫∑c vi ph·∫°m r√†ng bu·ªôc)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorEnvelope'

    InternalServerError:
      description: L·ªói kh√¥ng x√°c ƒë·ªãnh t·ª´ h·ªá th·ªëng
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorEnvelope'

paths:
  /users-global:
    get:
      summary: Danh s√°ch ng∆∞·ªùi d√πng to√†n c·ª•c (Master)
      description: |
        Tr·∫£ v·ªÅ danh s√°ch ng∆∞·ªùi d√πng to√†n h·ªá th·ªëng (kh√¥ng ph·ª• thu·ªôc tenant).
        H·ªó tr·ª£ t√¨m ki·∫øm, ph√¢n trang v√† s·∫Øp x·∫øp.
      tags:
        - users-global
      operationId: listGlobalUsers
      x-required-permission: superadmin.view_all_users_global
      parameters:
        - $ref: '#/components/parameters/AuthorizationHeader'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/SearchKeyword'
        - $ref: '#/components/parameters/UserGlobalSortBy'
        - $ref: '#/components/parameters/SortOrder'
      responses:
        '200':
          description: Danh s√°ch ng∆∞·ªùi d√πng to√†n c·ª•c
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserGlobals'
        '401':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/ForbiddenError'
        '500':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/InternalServerError'

    post:
      summary: T·∫°o ng∆∞·ªùi d√πng to√†n c·ª•c (Master)
      description: |
        T·∫°o m·ªõi ng∆∞·ªùi d√πng to√†n h·ªá th·ªëng v√† kh·ªüi t·∫°o `user_id` duy nh·∫•t.
        C√≥ th·ªÉ ph√°t sinh s·ª± ki·ªán `user_global_created` ƒë·ªÉ c√°c Sub Service ƒë·ªìng b·ªô.
      tags:
        - users-global
      operationId: createGlobalUser
      x-required-permission: superadmin.create_user_global
      x-audit-action: create_user_global
      x-emits-event: user_global_created
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGlobalCreateRequest'
      responses:
        '201':
          description: T·∫°o ng∆∞·ªùi d√πng to√†n c·ª•c th√†nh c√¥ng
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGlobalEnvelope'
        '400':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/BadRequestError'
        '403':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/ForbiddenError'
        '409':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/ConflictError'
        '500':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/InternalServerError'

  /users-global/by-email:
    get:
      summary: Tra c·ª©u ng∆∞·ªùi d√πng to√†n c·ª•c theo email
      description: |
        Truy v·∫•n th√¥ng tin ng∆∞·ªùi d√πng to√†n c·ª•c b·∫±ng ƒë·ªãa ch·ªâ email. 
        S·ª≠ d·ª•ng cho c√°c service ho·∫∑c admin x√°c minh ng∆∞·ªùi d√πng ƒë√£ t·ªìn t·∫°i hay ch∆∞a.
      operationId: getUserGlobalByEmail
      tags:
        - users-global
      x-required-permission: superadmin.view_all_users_global
      parameters:
        - $ref: '#/components/parameters/AuthorizationHeader'
        - name: email
          in: query
          required: true
          schema:
            type: string
            format: email
          description: ƒê·ªãa ch·ªâ email c·ªßa ng∆∞·ªùi d√πng c·∫ßn tra c·ª©u
      responses:
        '200':
          description: Ng∆∞·ªùi d√πng ƒë∆∞·ª£c t√¨m th·∫•y
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGlobalResponse'
        '400':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/BadRequestError'
        '401':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/ForbiddenError'
        '404':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /users-global/{user_id}:
    get:
      summary: Tra c·ª©u ng∆∞·ªùi d√πng to√†n c·ª•c theo user_id
      description: |
        Tr·∫£ v·ªÅ th√¥ng tin chi ti·∫øt c·ªßa ng∆∞·ªùi d√πng to√†n c·ª•c d·ª±a tr√™n `user_id`. 
        Ch·ªâ s·ª≠ d·ª•ng b·ªüi h·ªá th·ªëng ho·∫∑c qu·∫£n tr·ªã vi√™n v·ªõi quy·ªÅn ph√π h·ª£p.
      operationId: getUserGlobalById
      tags:
        - users-global
      x-required-permission: superadmin.view_all_users_global
      parameters:
        - $ref: '#/components/parameters/AuthorizationHeader'
        - name: user_id
          in: path
          required: true
          schema:
            type: string
          description: ID ƒë·ªãnh danh ng∆∞·ªùi d√πng to√†n c·ª•c
      responses:
        '200':
          description: Th√¥ng tin ng∆∞·ªùi d√πng
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGlobalResponse'
        '401':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/ForbiddenError'
        '404':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/NotFoundError'
        '500':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/InternalServerError'

    patch:
      summary: C·∫≠p nh·∫≠t th√¥ng tin ng∆∞·ªùi d√πng to√†n c·ª•c
      description: |
        C·∫≠p nh·∫≠t c√°c tr∆∞·ªùng cho ng∆∞·ªùi d√πng to√†n c·ª•c (master). 
        Ch·ªâ √°p d·ª•ng cho h·ªá th·ªëng ho·∫∑c qu·∫£n tr·ªã vi√™n c√≥ quy·ªÅn. Kh√¥ng c·∫≠p nh·∫≠t password t·∫°i endpoint n√†y.
      operationId: updateUserGlobal
      tags:
        - users-global
      x-required-permission: superadmin.update_user_global
      x-audit-action: update_user_global
      parameters:
        - $ref: '#/components/parameters/AuthorizationHeader'
        - name: user_id
          in: path
          required: true
          schema:
            type: string
          description: ID ƒë·ªãnh danh ng∆∞·ªùi d√πng to√†n c·ª•c
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGlobalUpdateRequest'
      responses:
        '200':
          description: C·∫≠p nh·∫≠t th√†nh c√¥ng
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGlobalEnvelope'
        '400':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/BadRequestError'
        '401':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/ForbiddenError'
        '404':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/NotFoundError'
        '409':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/ConflictError'
        '500':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/InternalServerError'

  /users-global/{user_id}/status:
    patch:
      summary: C·∫≠p nh·∫≠t tr·∫°ng th√°i ho·∫°t ƒë·ªông c·ªßa ng∆∞·ªùi d√πng to√†n c·ª•c
      description: |
        C·∫≠p nh·∫≠t `status` c·ªßa m·ªôt ng∆∞·ªùi d√πng to√†n c·ª•c (`UserGlobal`), 
        v√≠ d·ª•: chuy·ªÉn sang `suspended`, `deleted`, ho·∫∑c `active` tr·ªü l·∫°i.
        Tr∆∞·ªùng h·ª£p d√πng ƒë·ªÉ v√¥ hi·ªáu h√≥a ho·∫∑c k√≠ch ho·∫°t l·∫°i t√†i kho·∫£n ng∆∞·ªùi d√πng trong h·ªá th·ªëng.
      operationId: updateUserGlobalStatus
      tags:
        - users-global
      x-required-permission: superadmin.update_user_global_status
      x-audit-action: update_user_global_status
      parameters:
        - $ref: '#/components/parameters/AuthorizationHeader'
        - name: user_id
          in: path
          required: true
          schema:
            type: string
          description: ID ng∆∞·ªùi d√πng c·∫ßn c·∫≠p nh·∫≠t tr·∫°ng th√°i
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGlobalStatusUpdateRequest'
      responses:
        '200':
          description: C·∫≠p nh·∫≠t tr·∫°ng th√°i th√†nh c√¥ng
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGlobalEnvelope'
        '400':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/BadRequestError'
        '401':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/ForbiddenError'
        '404':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/NotFoundError'
        '500':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/InternalServerError'

  /tenants:
    get:
      summary: Danh s√°ch tenant
      description: |
        Tr·∫£ v·ªÅ danh s√°ch c√°c tenant (tr∆∞·ªùng th√†nh vi√™n) hi·ªán c√≥ trong h·ªá th·ªëng.
        H·ªó tr·ª£ t√¨m ki·∫øm, ph√¢n trang v√† s·∫Øp x·∫øp.
      tags:
        - tenants
      operationId: listTenants
      x-required-permission: superadmin.view_tenants
      x-audit-action: list_tenants
      parameters:
        - $ref: '#/components/parameters/AuthorizationHeader'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/SearchKeyword'
        - $ref: '#/components/parameters/TenantSortBy'
        - $ref: '#/components/parameters/SortOrder'
      responses:
        '200':
          description: L·∫•y danh s√°ch tenant th√†nh c√¥ng
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTenants'
        '401':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/ForbiddenError'
        '500':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/InternalServerError'

    post:
      summary: T·∫°o m·ªõi tenant
      description: |
        API d√πng ƒë·ªÉ t·∫°o m·ªõi m·ªôt tenant (tr∆∞·ªùng th√†nh vi√™n) trong h·ªá th·ªëng.
        Ch·ªâ superadmin m·ªõi ƒë∆∞·ª£c th·ª±c hi·ªán thao t√°c n√†y.
      tags:
        - tenants
      operationId: createTenant
      x-required-permission: superadmin.create_tenant
      x-audit-action: create_tenant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantCreateRequest'
            example:
              name: "Tr∆∞·ªùng Vi·ªát Anh C·∫ßn Th∆°"
              code: "tvact"
              description: "C∆° s·ªü C·∫ßn Th∆° c·ªßa h·ªá th·ªëng Tr∆∞·ªùng Vi·ªát Anh"
              status: active
      parameters:
        - $ref: '#/components/parameters/AuthorizationHeader'
      responses:
        '201':
          description: T·∫°o tenant th√†nh c√¥ng
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantEnvelope'
        '400':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/BadRequestError'
        '401':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/ForbiddenError'
        '409':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/ConflictError'
        '500':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/InternalServerError'

  /tenants/{tenant_id}:
    get:
      summary: L·∫•y th√¥ng tin chi ti·∫øt c·ªßa m·ªôt tenant
      description: |
        Tr·∫£ v·ªÅ th√¥ng tin chi ti·∫øt c·ªßa m·ªôt tenant (tr∆∞·ªùng th√†nh vi√™n) trong h·ªá th·ªëng.
        Th∆∞·ªùng ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ hi·ªÉn th·ªã th√¥ng tin c·∫•u h√¨nh tenant, v√≠ d·ª• trong ph·∫ßn c√†i ƒë·∫∑t h·ªá th·ªëng.
      operationId: getTenantById
      tags:
        - tenants
      x-required-permission: superadmin.view_tenants
      x-audit-action: get_tenant_by_id
      parameters:
        - $ref: '#/components/parameters/AuthorizationHeader'
        - name: tenant_id
          in: path
          required: true
          schema:
            type: string
          description: ID c·ªßa tenant c·∫ßn l·∫•y th√¥ng tin
      responses:
        '200':
          description: L·∫•y th√¥ng tin tenant th√†nh c√¥ng
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantResponse'
        '401':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/ForbiddenError'
        '404':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/NotFoundError'
        '500':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/InternalServerError'

    patch:
      summary: C·∫≠p nh·∫≠t th√¥ng tin tenant
      description: |
        C·∫≠p nh·∫≠t th√¥ng tin c·∫•u h√¨nh c·ªßa m·ªôt tenant (tr∆∞·ªùng th√†nh vi√™n).
        Ch·ªâ c·∫≠p nh·∫≠t c√°c tr∆∞·ªùng cho ph√©p (v√≠ d·ª•: name, contact_email, status).
      operationId: updateTenantById
      tags:
        - tenants
      x-required-permission: superadmin.update_tenants
      x-audit-action: update_tenant
      parameters:
        - $ref: '#/components/parameters/AuthorizationHeader'
        - name: tenant_id
          in: path
          required: true
          schema:
            type: string
          description: ID c·ªßa tenant c·∫ßn c·∫≠p nh·∫≠t
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantUpdateRequest'
      responses:
        '200':
          description: C·∫≠p nh·∫≠t th√¥ng tin tenant th√†nh c√¥ng
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantEnvelope'
        '400':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/BadRequestError'
        '401':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/ForbiddenError'
        '404':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/NotFoundError'
        '500':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/InternalServerError'

  /tenants/{tenant_id}/status:
    patch:
      summary: C·∫≠p nh·∫≠t tr·∫°ng th√°i ho·∫°t ƒë·ªông c·ªßa tenant
      description: |
        Thay ƒë·ªïi tr·∫°ng th√°i ho·∫°t ƒë·ªông c·ªßa m·ªôt tenant (v√≠ d·ª•: active ‚Üí suspended).
        Thao t√°c n√†y ƒë∆∞·ª£c ghi log v√† c√≥ th·ªÉ ·∫£nh h∆∞·ªüng ƒë·∫øn quy·ªÅn truy c·∫≠p c·ªßa to√†n b·ªô ng∆∞·ªùi d√πng thu·ªôc tenant ƒë√≥.
      operationId: updateTenantStatus
      tags:
        - tenants
      x-required-permission: superadmin.update_tenants
      x-audit-action: update_tenant_status
      parameters:
        - $ref: '#/components/parameters/AuthorizationHeader'
        - name: tenant_id
          in: path
          required: true
          schema:
            type: string
          description: ID c·ªßa tenant c·∫ßn c·∫≠p nh·∫≠t tr·∫°ng th√°i
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - status
              properties:
                status:
                  $ref: '#/components/schemas/TenantStatusEnum'
              example:
                status: suspended
      responses:
        '200':
          description: C·∫≠p nh·∫≠t tr·∫°ng th√°i tenant th√†nh c√¥ng
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantEnvelope'
        '400':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/BadRequestError'
        '401':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/ForbiddenError'
        '404':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/NotFoundError'
        '500':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/InternalServerError'

  /user-tenant-assignments:
    get:
      summary: Danh s√°ch g√°n ng∆∞·ªùi d√πng v√†o tenant
      description: |
        Tr·∫£ v·ªÅ danh s√°ch c√°c ng∆∞·ªùi d√πng ƒë∆∞·ª£c g√°n v√†o tenant hi·ªán t·∫°i, bao g·ªìm th√¥ng tin user_id, role ƒë√£ g√°n, th·ªùi ƒëi·ªÉm g√°n v√† tr·∫°ng th√°i.
        H·ªó tr·ª£ l·ªçc theo user_id, tenant_id, ph√¢n trang v√† s·∫Øp x·∫øp theo th·ªùi gian t·∫°o.
      tags: [user-tenant-assignments]
      operationId: listUserTenantAssignments
      x-audit-action: list_user_tenant_assignments
      x-required-permission: superadmin.view_user_assignments
      parameters:
        - $ref: '#/components/parameters/AuthorizationHeader'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/SearchKeyword'
        - $ref: '#/components/parameters/UserTenantAssignmentsSortBy'
        - $ref: '#/components/parameters/SortOrder'
      responses:
        '200':
          description: L·∫•y danh s√°ch g√°n ng∆∞·ªùi d√πng th√†nh c√¥ng
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserTenantAssignments'
        '401':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/ForbiddenError'
        '500':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/InternalServerError'

    post:
      summary: G√°n ng∆∞·ªùi d√πng v√†o m·ªôt tenant
      description: |
        T·∫°o m·ªôt g√°n quy·ªÅn ng∆∞·ªùi d√πng v√†o tenant, ƒëi k√®m v·ªõi role ƒë∆∞·ª£c ch·ªçn. N·∫øu ng∆∞·ªùi d√πng ƒë√£ c√≥ g√°n quy·ªÅn tr∆∞·ªõc ƒë√≥ v·ªõi tr·∫°ng th√°i `revoked`, c√≥ th·ªÉ ph·ª•c h·ªìi b·∫±ng c√°ch c·∫≠p nh·∫≠t tr·∫°ng th√°i v·ªÅ `active`.
      tags: [user-tenant-assignments]
      operationId: assignUserToTenant
      x-audit-action: assign_user_to_tenant
      x-required-permission: superadmin.assign_user_to_tenant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserTenantAssignmentCreateRequest'
      parameters:
        - $ref: '#/components/parameters/AuthorizationHeader'
      responses:
        '201':
          description: G√°n ng∆∞·ªùi d√πng v√†o tenant th√†nh c√¥ng
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTenantAssignmentEnvelope'
        '400':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/BadRequestError'
        '401':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/ForbiddenError'
        '409':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/ConflictError'
        '500':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/InternalServerError'

  /user-tenant-assignments/{assignment_id}:
    get:
      summary: L·∫•y th√¥ng tin chi ti·∫øt g√°n ng∆∞·ªùi d√πng v√†o tenant
      description: |
        Tr·∫£ v·ªÅ th√¥ng tin chi ti·∫øt c·ªßa m·ªôt g√°n quy·ªÅn ng∆∞·ªùi d√πng v√†o tenant, bao g·ªìm role, tr·∫°ng th√°i v√† th·ªùi gian t·∫°o/c·∫≠p nh·∫≠t.
      tags: [user-tenant-assignments]
      operationId: getUserTenantAssignment
      x-audit-action: view_user_tenant_assignment
      x-required-permission: superadmin.view_user_assignments
      parameters:
        - $ref: '#/components/parameters/AuthorizationHeader'
        - name: assignment_id
          in: path
          required: true
          schema:
            type: string
          description: ID c·ªßa g√°n ng∆∞·ªùi d√πng v√†o tenant
      responses:
        '200':
          description: L·∫•y chi ti·∫øt g√°n ng∆∞·ªùi d√πng th√†nh c√¥ng
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTenantAssignmentResponse'
        '401':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/ForbiddenError'
        '404':
          description: Kh√¥ng t√¨m th·∫•y g√°n quy·ªÅn ng∆∞·ªùi d√πng
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEnvelope'
        '500':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/InternalServerError'

    patch:
      summary: C·∫≠p nh·∫≠t th√¥ng tin ph√¢n quy·ªÅn ng∆∞·ªùi d√πng
      description: |
        C·∫≠p nh·∫≠t th√¥ng tin ph√¢n quy·ªÅn ng∆∞·ªùi d√πng trong tenant, v√≠ d·ª• thay ƒë·ªïi `role_code`.
      tags: [user-tenant-assignments]
      operationId: updateUserTenantAssignment
      x-audit-action: update_user_tenant_assignment
      x-required-permission: superadmin.update_user_tenant_assignment
      parameters:
        - $ref: '#/components/parameters/AuthorizationHeader'
        - name: assignment_id
          in: path
          required: true
          description: ID c·ªßa ph√¢n quy·ªÅn ng∆∞·ªùi d√πng c·∫ßn c·∫≠p nh·∫≠t
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserTenantAssignmentUpdateRequest'
      responses:
        '200':
          description: C·∫≠p nh·∫≠t ph√¢n quy·ªÅn ng∆∞·ªùi d√πng th√†nh c√¥ng
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTenantAssignmentEnvelope'
        '400':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/BadRequestError'
        '401':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/ForbiddenError'
        '404':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/NotFoundError'
        '409':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/ConflictError'
        '500':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/InternalServerError'

  /user-tenant-assignments/{assignment_id}/status:
    patch:
      summary: C·∫≠p nh·∫≠t tr·∫°ng th√°i ph√¢n quy·ªÅn ng∆∞·ªùi d√πng
      description: |
        C·∫≠p nh·∫≠t tr·∫°ng th√°i c·ªßa b·∫£n ghi ph√¢n quy·ªÅn ng∆∞·ªùi d√πng trong tenant, v√≠ d·ª• chuy·ªÉn sang `revoked`, `suspended`, v.v.
      tags: [user-tenant-assignments]
      operationId: updateUserTenantAssignmentStatus
      x-audit-action: update_user_tenant_assignment_status
      x-required-permission: superadmin.update_user_tenant_assignment
      parameters:
        - $ref: '#/components/parameters/AuthorizationHeader'
        - name: assignment_id
          in: path
          required: true
          description: ID c·ªßa ph√¢n quy·ªÅn ng∆∞·ªùi d√πng c·∫ßn c·∫≠p nh·∫≠t tr·∫°ng th√°i
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserTenantAssignmentStatusUpdateRequest'
      responses:
        '200':
          description: C·∫≠p nh·∫≠t tr·∫°ng th√°i th√†nh c√¥ng
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTenantAssignmentEnvelope'
        '400':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/BadRequestError'
        '401':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/ForbiddenError'
        '404':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/NotFoundError'
        '409':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/ConflictError'
        '500':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/InternalServerError'

  /rbac/templates/roles:
    get:
      summary: Danh s√°ch role templates to√†n c·ª•c
      description: Tr·∫£ v·ªÅ danh s√°ch c√°c role template ƒë∆∞·ª£c ƒë·ªìng b·ªô t·ª´ User Service Master
      tags: [rbac-templates]
      operationId: listRoleTemplates
      x-required-permission: superadmin.view_rbac_templates
      x-audit-action: list_role_templates
      parameters:
        - $ref: '#/components/parameters/AuthorizationHeader'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/SearchKeyword'
        - $ref: '#/components/parameters/RoleTemplateSortBy'
        - $ref: '#/components/parameters/SortOrder'
      responses:
        '200':
          description: Danh s√°ch role template
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRoleTemplates'
        '401':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/ForbiddenError'
        '500':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/InternalServerError'

    post:
      summary: T·∫°o role template m·ªõi
      description: T·∫°o m·ªôt role template to√†n c·ª•c ƒë·ªÉ ƒë·ªìng b·ªô t·ªõi c√°c tenant
      tags: [rbac-templates]
      operationId: createRoleTemplate
      x-required-permission: superadmin.create_rbac_templates
      x-audit-action: create_role_template
      x-emits-event: rbac_template_created
      parameters:
        - $ref: '#/components/parameters/AuthorizationHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleTemplateCreateRequest'
      responses:
        '201':
          description: T·∫°o th√†nh c√¥ng
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleTemplateEnvelope'
        '400':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/BadRequestError'
        '403':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/ForbiddenError'
        '409':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/ConflictError'
        '500':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/InternalServerError'


  /rbac/templates/roles/{template_id}:
    get:
      summary: L·∫•y chi ti·∫øt m·ªôt role template
      description: L·∫•y th√¥ng tin chi ti·∫øt c·ªßa m·ªôt role template theo `template_id`
      tags: [rbac-templates]
      operationId: getRoleTemplate
      x-required-permission: superadmin.view_rbac_templates
      x-audit-action: view_role_template
      parameters:
        - $ref: '#/components/parameters/AuthorizationHeader'
        - name: template_id
          in: path
          required: true
          description: ID ƒë·ªãnh danh c·ªßa role template
          schema:
            type: string
      responses:
        '200':
          description: Th√¥ng tin role template
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleTemplateResponse'
        '401':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/ForbiddenError'
        '404':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/NotFoundError'
        '500':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/InternalServerError'

    patch:
      summary: C·∫≠p nh·∫≠t th√¥ng tin role template
      description: C·∫≠p nh·∫≠t t√™n v√† m√¥ t·∫£ c·ªßa m·ªôt role template
      tags: [rbac-templates]
      operationId: updateRoleTemplate
      x-required-permission: superadmin.update_rbac_templates
      x-audit-action: update_role_template
      x-emits-event: rbac_template_updated
      parameters:
        - $ref: '#/components/parameters/AuthorizationHeader'
        - name: template_id
          in: path
          required: true
          description: ID ƒë·ªãnh danh c·ªßa role template
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleTemplateUpdateRequest'
      responses:
        '200':
          description: C·∫≠p nh·∫≠t th√†nh c√¥ng
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleTemplateEnvelope'
        '400':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/BadRequestError'
        '403':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/ForbiddenError'
        '404':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/NotFoundError'
        '500':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/InternalServerError'

    delete:
      summary: X√≥a role template
      description: X√≥a vƒ©nh vi·ªÖn m·ªôt role template kh·ªèi h·ªá th·ªëng master
      tags: [rbac-templates]
      operationId: deleteRoleTemplate
      x-required-permission: superadmin.delete_rbac_templates
      x-audit-action: delete_role_template
      x-emits-event: rbac_template_deleted
      parameters:
        - $ref: '#/components/parameters/AuthorizationHeader'
        - name: template_id
          in: path
          required: true
          description: ID ƒë·ªãnh danh c·ªßa role template
          schema:
            type: string
      responses:
        '204':
          description: X√≥a th√†nh c√¥ng, kh√¥ng c√≥ n·ªôi dung tr·∫£ v·ªÅ
        '403':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/ForbiddenError'
        '404':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/NotFoundError'
        '500':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/InternalServerError'

  /rbac/templates/permissions:
    get:
      summary: Danh s√°ch permission templates
      description: Tr·∫£ v·ªÅ danh s√°ch permission templates to√†n c·ª•c ƒë√£ ƒë∆∞·ª£c ƒë·ªãnh nghƒ©a, h·ªó tr·ª£ ph√¢n trang v√† s·∫Øp x·∫øp
      tags: [rbac-templates]
      operationId: listPermissionTemplates
      x-required-permission: superadmin.view_rbac_templates
      x-audit-action: list_permission_templates
      parameters:
        - $ref: '#/components/parameters/AuthorizationHeader'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/SearchKeyword'
        - $ref: '#/components/parameters/PermissionTemplateSortBy'
        - $ref: '#/components/parameters/SortOrder'
      responses:
        '200':
          description: Danh s√°ch permission templates
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPermissionTemplates'
        '401':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/ForbiddenError'
        '500':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/InternalServerError'

    post:
      summary: T·∫°o permission template m·ªõi
      description: T·∫°o m·ªôt permission template to√†n c·ª•c ƒë·ªÉ ƒë·ªìng b·ªô t·ªõi c√°c tenant
      tags: [rbac-templates]
      operationId: createPermissionTemplate
      x-required-permission: superadmin.create_rbac_templates
      x-audit-action: create_permission_template
      x-emits-event: rbac_template_created
      parameters:
        - $ref: '#/components/parameters/AuthorizationHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionTemplateCreateRequest'
      responses:
        '201':
          description: T·∫°o th√†nh c√¥ng
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionTemplateEnvelope'
        '400':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/BadRequestError'
        '403':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/ForbiddenError'
        '409':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/ConflictError'
        '500':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/InternalServerError'

  /rbac/templates/permissions/{template_id}:
    get:
      summary: Chi ti·∫øt permission template
      description: Tr·∫£ v·ªÅ chi ti·∫øt permission template theo ID
      tags: [rbac-templates]
      operationId: getPermissionTemplate
      x-required-permission: superadmin.view_rbac_templates
      x-audit-action: view_permission_template
      parameters:
        - $ref: '#/components/parameters/AuthorizationHeader'
        - name: template_id
          in: path
          required: true
          description: ID ƒë·ªãnh danh c·ªßa permission template
          schema:
            type: string
      responses:
        '200':
          description: Th√¥ng tin permission template
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionTemplateResponse'
        '401':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/ForbiddenError'
        '404':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/NotFoundError'
        '500':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/InternalServerError'

    patch:
      summary: C·∫≠p nh·∫≠t th√¥ng tin permission template
      description: C·∫≠p nh·∫≠t t√™n v√† m√¥ t·∫£ c·ªßa m·ªôt permission template
      tags: [rbac-templates]
      operationId: updatePermissionTemplate
      x-required-permission: superadmin.update_rbac_templates
      x-audit-action: update_permission_template
      x-emits-event: rbac_template_updated
      parameters:
        - $ref: '#/components/parameters/AuthorizationHeader'
        - name: template_id
          in: path
          required: true
          description: ID ƒë·ªãnh danh c·ªßa permission template
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionTemplateUpdateRequest'
      responses:
        '200':
          description: C·∫≠p nh·∫≠t th√†nh c√¥ng
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionTemplateEnvelope'
        '400':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/BadRequestError'
        '403':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/InternalServerError'

    delete:
      summary: X√≥a permission template
      description: X√≥a vƒ©nh vi·ªÖn m·ªôt permission template kh·ªèi h·ªá th·ªëng master
      tags: [rbac-templates]
      operationId: deletePermissionTemplate
      x-required-permission: superadmin.delete_rbac_templates
      x-audit-action: delete_permission_template
      x-emits-event: rbac_template_deleted
      parameters:
        - $ref: '#/components/parameters/AuthorizationHeader'
        - name: template_id
          in: path
          required: true
          description: ID ƒë·ªãnh danh c·ªßa permission template
          schema:
            type: string
      responses:
        '204':
          description: X√≥a th√†nh c√¥ng, kh√¥ng c√≥ n·ªôi dung tr·∫£ v·ªÅ
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        '403':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/ForbiddenError'
        '404':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/NotFoundError'
        '500':
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          $ref: '#/components/responses/InternalServerError'
